syntax = "proto3";

package cloud.api.pipelines.v1;

import "pipelines/v1/pipeline.proto";
import "github.com/VideoCoin/cloud-api/rpc/health.proto";
import "github.com/VideoCoin/cloud-api/profiles/v1/profiles.proto";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

option go_package = "v1";
option (gogoproto.unmarshaler_all) = false;
option (gogoproto.marshaler_all) = false;
option (gogoproto.sizer_all) = false;

service PipelineService {
    rpc Health(google.protobuf.Empty) returns (cloud.api.rpc.HealthStatus) {
        option (google.api.http) = {
            get: "/healthz"
        };
    }

    rpc Create(CreatePipelineRequest) returns (PipelineProfile) {
        option (google.api.http) = {
            post: "/api/v1/pipelines",
            body: "*"
        };
    }

    rpc Get(PipelineRequest) returns (PipelineProfile) {
        option (google.api.http) = {
            get: "/api/v1/pipelines/{id}"
        };
    }

    rpc List(google.protobuf.Empty) returns (ListResponse) {
        option (google.api.http) = {
            get: "/api/v1/pipelines"
        };
    }

    rpc Update(UpdatePipelineRequest) returns (PipelineProfile) {
        option (google.api.http) = {
            put: "/api/v1/pipelines/{id}",
            body: "*"
        };
    }

    rpc Run(PipelineRequest) returns (PipelineProfile) {
        option (google.api.http) = {
            post: "/api/v1/pipelines/{id}/start",
            body: "*"
        };
    }

    rpc Complete(PipelineRequest) returns (PipelineProfile) {
        option (google.api.http) = {
            post: "/api/v1/pipelines/{id}/stop",
            body: "*"
        };
    }
}

message CreatePipelineRequest {
    string name = 1 [(validate.rules).string.min_len = 1];
    cloud.api.profiles.v1.ProfileId profile_id = 2;
}

message PipelineRequest {
    string id = 1;
}

message ListResponse {
    repeated PipelineProfile items = 1;
}

message UpdatePipelineRequest {
    string id = 1;
    string user_id = 2;
    string name = 4;
    string client_address = 5;
    uint64 stream_id = 6;
    string stream_address = 7;
    PipelineStatus status = 8;
    cloud.api.profiles.v1.ProfileId profile_id = 9;
}