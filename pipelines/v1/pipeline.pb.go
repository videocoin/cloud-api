// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pipelines/v1/pipeline.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v1 "github.com/VideoCoin/cloud-api/profiles/v1"
import _ "github.com/envoyproxy/protoc-gen-validate/validate"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/golang/protobuf/ptypes/timestamp"

import time "time"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PipelineStatus int32

const (
	PipelineStatusIdle           PipelineStatus = 0
	PipelineStatusRequestPending PipelineStatus = 1
	PipelineStatusApprovePending PipelineStatus = 2
	PipelineStatusCreatePending  PipelineStatus = 3
	PipelineStatusJobPending     PipelineStatus = 4
	PipelineStatusRunning        PipelineStatus = 5
	PipelineStatusFailed         PipelineStatus = 6
	PipelineStatusCompleted      PipelineStatus = 7
)

var PipelineStatus_name = map[int32]string{
	0: "IDLE",
	1: "PENDING_REQUEST",
	2: "PENDING_APPROVE",
	3: "PENDING_CREATE",
	4: "PENDING_JOB",
	5: "RUNNING",
	6: "FAILED",
	7: "COMPLETED",
}
var PipelineStatus_value = map[string]int32{
	"IDLE":            0,
	"PENDING_REQUEST": 1,
	"PENDING_APPROVE": 2,
	"PENDING_CREATE":  3,
	"PENDING_JOB":     4,
	"RUNNING":         5,
	"FAILED":          6,
	"COMPLETED":       7,
}

func (x PipelineStatus) String() string {
	return proto.EnumName(PipelineStatus_name, int32(x))
}
func (PipelineStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_295c6f0c3cb7a022, []int{0}
}

type Pipeline struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"type:varchar(36);primary_key"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" gorm:"type:varchar(100)"`
	UserId               string         `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" gorm:"type:varchar(36)"`
	ProfileId            v1.ProfileId   `protobuf:"varint,4,opt,name=profile_id,json=profileId,proto3,enum=cloud.api.profiles.v1.ProfileId" json:"profile_id,omitempty"`
	Status               PipelineStatus `protobuf:"varint,5,opt,name=status,proto3,enum=cloud.api.pipelines.v1.PipelineStatus" json:"status,omitempty" gorm:"type:varchar(100)"`
	CreatedAt            *time.Time     `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	PendingAt            *time.Time     `protobuf:"bytes,11,opt,name=pending_at,json=pendingAt,proto3,stdtime" json:"pending_at,omitempty"`
	RunningAt            *time.Time     `protobuf:"bytes,12,opt,name=running_at,json=runningAt,proto3,stdtime" json:"running_at,omitempty"`
	StoppedAt            *time.Time     `protobuf:"bytes,13,opt,name=stopped_at,json=stoppedAt,proto3,stdtime" json:"stopped_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Pipeline) Reset()         { *m = Pipeline{} }
func (m *Pipeline) String() string { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()    {}
func (*Pipeline) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_295c6f0c3cb7a022, []int{0}
}
func (m *Pipeline) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pipeline.Unmarshal(m, b)
}
func (m *Pipeline) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pipeline.Marshal(b, m, deterministic)
}
func (dst *Pipeline) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pipeline.Merge(dst, src)
}
func (m *Pipeline) XXX_Size() int {
	return xxx_messageInfo_Pipeline.Size(m)
}
func (m *Pipeline) XXX_DiscardUnknown() {
	xxx_messageInfo_Pipeline.DiscardUnknown(m)
}

var xxx_messageInfo_Pipeline proto.InternalMessageInfo

func (m *Pipeline) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pipeline) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Pipeline) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Pipeline) GetProfileId() v1.ProfileId {
	if m != nil {
		return m.ProfileId
	}
	return v1.ProfileIdNone
}

func (m *Pipeline) GetStatus() PipelineStatus {
	if m != nil {
		return m.Status
	}
	return PipelineStatusIdle
}

func (m *Pipeline) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Pipeline) GetPendingAt() *time.Time {
	if m != nil {
		return m.PendingAt
	}
	return nil
}

func (m *Pipeline) GetRunningAt() *time.Time {
	if m != nil {
		return m.RunningAt
	}
	return nil
}

func (m *Pipeline) GetStoppedAt() *time.Time {
	if m != nil {
		return m.StoppedAt
	}
	return nil
}

type PipelineProfile struct {
	Id                   string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status               PipelineStatus `protobuf:"varint,3,opt,name=status,proto3,enum=cloud.api.pipelines.v1.PipelineStatus" json:"status,omitempty"`
	ProfileId            v1.ProfileId   `protobuf:"varint,4,opt,name=profile_id,json=profileId,proto3,enum=cloud.api.profiles.v1.ProfileId" json:"profile_id,omitempty"`
	CreatedAt            *time.Time     `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3,stdtime" json:"created_at,omitempty"`
	PendingAt            *time.Time     `protobuf:"bytes,11,opt,name=pending_at,json=pendingAt,proto3,stdtime" json:"pending_at,omitempty"`
	RunningAt            *time.Time     `protobuf:"bytes,12,opt,name=running_at,json=runningAt,proto3,stdtime" json:"running_at,omitempty"`
	StoppedAt            *time.Time     `protobuf:"bytes,13,opt,name=stopped_at,json=stoppedAt,proto3,stdtime" json:"stopped_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PipelineProfile) Reset()         { *m = PipelineProfile{} }
func (m *PipelineProfile) String() string { return proto.CompactTextString(m) }
func (*PipelineProfile) ProtoMessage()    {}
func (*PipelineProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_pipeline_295c6f0c3cb7a022, []int{1}
}
func (m *PipelineProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipelineProfile.Unmarshal(m, b)
}
func (m *PipelineProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipelineProfile.Marshal(b, m, deterministic)
}
func (dst *PipelineProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipelineProfile.Merge(dst, src)
}
func (m *PipelineProfile) XXX_Size() int {
	return xxx_messageInfo_PipelineProfile.Size(m)
}
func (m *PipelineProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_PipelineProfile.DiscardUnknown(m)
}

var xxx_messageInfo_PipelineProfile proto.InternalMessageInfo

func (m *PipelineProfile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PipelineProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PipelineProfile) GetStatus() PipelineStatus {
	if m != nil {
		return m.Status
	}
	return PipelineStatusIdle
}

func (m *PipelineProfile) GetProfileId() v1.ProfileId {
	if m != nil {
		return m.ProfileId
	}
	return v1.ProfileIdNone
}

func (m *PipelineProfile) GetCreatedAt() *time.Time {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *PipelineProfile) GetPendingAt() *time.Time {
	if m != nil {
		return m.PendingAt
	}
	return nil
}

func (m *PipelineProfile) GetRunningAt() *time.Time {
	if m != nil {
		return m.RunningAt
	}
	return nil
}

func (m *PipelineProfile) GetStoppedAt() *time.Time {
	if m != nil {
		return m.StoppedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*Pipeline)(nil), "cloud.api.pipelines.v1.Pipeline")
	proto.RegisterType((*PipelineProfile)(nil), "cloud.api.pipelines.v1.PipelineProfile")
	proto.RegisterEnum("cloud.api.pipelines.v1.PipelineStatus", PipelineStatus_name, PipelineStatus_value)
}

func init() {
	proto.RegisterFile("pipelines/v1/pipeline.proto", fileDescriptor_pipeline_295c6f0c3cb7a022)
}

var fileDescriptor_pipeline_295c6f0c3cb7a022 = []byte{
	// 733 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x92, 0xcf, 0x6e, 0xd3, 0x4a,
	0x14, 0xc6, 0xf3, 0xaf, 0xe9, 0xcd, 0xf4, 0xde, 0xd4, 0xb2, 0x7a, 0x5b, 0xe3, 0x56, 0x89, 0x15,
	0x4a, 0x95, 0x56, 0x8a, 0xd3, 0xb4, 0x02, 0x89, 0x22, 0x81, 0x9c, 0xc4, 0xad, 0x52, 0x95, 0x34,
	0xb8, 0x69, 0x17, 0x08, 0x29, 0x72, 0xe2, 0xa9, 0x3b, 0xc2, 0xf1, 0x0c, 0xce, 0xc4, 0x22, 0x6f,
	0x80, 0xb2, 0x62, 0x85, 0xba, 0xc9, 0x0a, 0x9e, 0xa2, 0x2b, 0x96, 0x2c, 0x79, 0x82, 0x82, 0xc2,
	0x8a, 0x6d, 0x9f, 0x00, 0xc5, 0x7f, 0x5a, 0x27, 0x44, 0xa2, 0x88, 0x2d, 0xbb, 0x33, 0x9a, 0xef,
	0xf7, 0xcd, 0x9c, 0xf3, 0x1d, 0xb0, 0x4c, 0x10, 0x81, 0x06, 0x32, 0x61, 0x27, 0x6f, 0x17, 0xf2,
	0xfe, 0x41, 0x24, 0x16, 0xa6, 0x98, 0x5d, 0x6c, 0x19, 0xb8, 0xab, 0x89, 0x2a, 0x41, 0xe2, 0xb5,
	0x4c, 0xb4, 0x0b, 0xfc, 0x43, 0x1d, 0xd1, 0xb3, 0x6e, 0x53, 0x6c, 0xe1, 0x76, 0xfe, 0x04, 0x69,
	0x10, 0x97, 0x30, 0x32, 0xf3, 0x8e, 0x38, 0xa7, 0x12, 0x94, 0x27, 0x16, 0x3e, 0x45, 0x86, 0x67,
	0xe9, 0xd5, 0xae, 0x25, 0x2f, 0x05, 0x50, 0x68, 0xda, 0xb8, 0x47, 0x2c, 0xfc, 0xba, 0x97, 0x77,
	0x2e, 0x5b, 0x39, 0x1d, 0x9a, 0x39, 0x5b, 0x35, 0x90, 0xa6, 0x52, 0x98, 0xff, 0xa9, 0xf0, 0x2c,
	0x72, 0x01, 0x0b, 0x1d, 0xeb, 0xd8, 0x85, 0x9b, 0xdd, 0x53, 0xe7, 0xe4, 0x1c, 0x9c, 0xca, 0x93,
	0xa7, 0x75, 0x8c, 0x75, 0x03, 0xde, 0xa8, 0x28, 0x6a, 0xc3, 0x0e, 0x55, 0xdb, 0xc4, 0x15, 0x64,
	0x86, 0x31, 0xf0, 0x4f, 0xcd, 0x6b, 0x8f, 0x95, 0x40, 0x04, 0x69, 0x5c, 0x58, 0x08, 0x67, 0x13,
	0xc5, 0xc2, 0xd5, 0x65, 0xfa, 0xae, 0x8e, 0xad, 0xf6, 0x4e, 0x86, 0xf6, 0x08, 0xdc, 0xb1, 0x55,
	0xab, 0x75, 0xa6, 0x5a, 0xd9, 0xed, 0x07, 0xeb, 0x8f, 0x88, 0x85, 0xda, 0xaa, 0xd5, 0x6b, 0xbc,
	0x84, 0xbd, 0xcc, 0xc5, 0xf7, 0x8f, 0xd1, 0x19, 0x2b, 0x7a, 0x1e, 0x5e, 0x55, 0x22, 0x48, 0x63,
	0x37, 0x41, 0xcc, 0x54, 0xdb, 0x90, 0x8b, 0x38, 0x26, 0x2b, 0x57, 0x97, 0x69, 0x6e, 0x8a, 0x49,
	0x61, 0x73, 0x73, 0x3d, 0xa3, 0x38, 0x4a, 0xf6, 0x31, 0x98, 0xed, 0x76, 0xa0, 0xd5, 0x40, 0x1a,
	0x17, 0x75, 0xa0, 0x7b, 0x57, 0x97, 0xe9, 0xa5, 0xe9, 0x2f, 0x07, 0x5f, 0x8b, 0x8f, 0xa8, 0x8a,
	0xc6, 0x3e, 0x01, 0xc0, 0x1b, 0xf3, 0xc8, 0x22, 0x26, 0x84, 0xb3, 0xc9, 0x2d, 0x41, 0x0c, 0x84,
	0xe7, 0x67, 0x60, 0x17, 0xc4, 0x9a, 0x5b, 0x57, 0x34, 0x25, 0x41, 0xfc, 0x92, 0x7d, 0x01, 0xe2,
	0x1d, 0xaa, 0xd2, 0x6e, 0x87, 0x9b, 0x71, 0xe0, 0x35, 0x71, 0x7a, 0xf2, 0xa2, 0x3f, 0xa7, 0x23,
	0x47, 0xfd, 0x8b, 0xe6, 0x3c, 0xcf, 0xd1, 0xf7, 0x5a, 0x16, 0x54, 0x29, 0xd4, 0x1a, 0x2a, 0xe5,
	0x80, 0x10, 0xce, 0xce, 0x6d, 0xf1, 0xa2, 0x1b, 0x8b, 0xe8, 0xc7, 0x22, 0xd6, 0xfd, 0x58, 0x8a,
	0xb1, 0xb7, 0x5f, 0xd2, 0x61, 0x25, 0xe1, 0x31, 0x12, 0x75, 0xfa, 0x83, 0xa6, 0x86, 0x4c, 0x7d,
	0x64, 0x30, 0x77, 0x5b, 0x03, 0x8f, 0x71, 0x0d, 0xac, 0xae, 0x69, 0x7a, 0x06, 0xff, 0xde, 0xd6,
	0xc0, 0x63, 0x5c, 0x83, 0x0e, 0xc5, 0x84, 0xb8, 0x2d, 0xfc, 0x77, 0x5b, 0x03, 0x8f, 0x91, 0x68,
	0xe6, 0x22, 0x0a, 0xe6, 0xfd, 0xe1, 0x79, 0x11, 0xb0, 0xc9, 0x9b, 0x5d, 0x73, 0x16, 0x87, 0x0d,
	0x2e, 0xce, 0xf5, 0x6a, 0xf8, 0xc9, 0x44, 0x7f, 0x27, 0x99, 0xe0, 0xec, 0xff, 0x6c, 0x35, 0xfe,
	0x86, 0x47, 0x37, 0xde, 0x45, 0x41, 0x72, 0x7c, 0xbe, 0xac, 0x00, 0x62, 0x95, 0xf2, 0x81, 0xcc,
	0x84, 0xf8, 0xc5, 0xfe, 0x40, 0x60, 0xc7, 0x6f, 0x2b, 0x9a, 0x01, 0xd9, 0xfb, 0x60, 0xbe, 0x26,
	0x57, 0xcb, 0x95, 0xea, 0x5e, 0x43, 0x91, 0x9f, 0x1d, 0xcb, 0x47, 0x75, 0x26, 0xcc, 0x0b, 0xfd,
	0x81, 0xb0, 0x32, 0x11, 0x15, 0x7c, 0xd5, 0x85, 0x1d, 0x5a, 0x73, 0xfb, 0x0d, 0x62, 0x52, 0xad,
	0xa6, 0x1c, 0x9e, 0xc8, 0x4c, 0x64, 0x1a, 0x26, 0x11, 0x62, 0x61, 0x1b, 0xfa, 0xd8, 0x36, 0x48,
	0xfa, 0x58, 0x49, 0x91, 0xa5, 0xba, 0xcc, 0x44, 0xf9, 0x74, 0x7f, 0x20, 0x2c, 0x8f, 0x53, 0x25,
	0x27, 0x16, 0x1f, 0xca, 0x81, 0x39, 0x1f, 0xda, 0x3f, 0x2c, 0x32, 0x31, 0x7e, 0xa5, 0x3f, 0x10,
	0xb8, 0x71, 0x62, 0x1f, 0x37, 0x7d, 0xf9, 0x1a, 0x98, 0x55, 0x8e, 0xab, 0xd5, 0x4a, 0x75, 0x8f,
	0x99, 0xe1, 0xef, 0xf4, 0x07, 0xc2, 0xff, 0x13, 0x9d, 0xb8, 0x13, 0x67, 0x57, 0x41, 0x7c, 0x57,
	0xaa, 0x1c, 0xc8, 0x65, 0x26, 0xce, 0x73, 0xfd, 0x81, 0xb0, 0x30, 0x2e, 0xdb, 0x55, 0x91, 0x01,
	0x35, 0x76, 0x03, 0x24, 0x4a, 0x87, 0x4f, 0x6b, 0x07, 0x72, 0x5d, 0x2e, 0x33, 0xb3, 0xfc, 0x72,
	0x7f, 0x20, 0x2c, 0x4d, 0x7c, 0x16, 0xb7, 0x89, 0x01, 0x29, 0xd4, 0xf8, 0xc5, 0x37, 0xef, 0x53,
	0xa1, 0x8b, 0x0f, 0xa9, 0x89, 0x14, 0x8a, 0x0b, 0x9f, 0x86, 0xa9, 0xd0, 0xe7, 0x61, 0x2a, 0xf4,
	0x75, 0x98, 0x0a, 0x9d, 0x7f, 0x4b, 0x85, 0x9e, 0x47, 0xec, 0x42, 0x33, 0xee, 0x64, 0xba, 0xfd,
	0x23, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x81, 0x01, 0x05, 0xdc, 0x06, 0x00, 0x00,
}
