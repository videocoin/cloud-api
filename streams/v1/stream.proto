syntax = "proto3";

package cloud.api.streams.v1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

// The status of a stream is affected by API calls made on a stream object.
enum StreamStatus {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.enum_customname) = "StreamStatus";

    // Status not set
    STREAM_STATUS_NONE = 0 [ (gogoproto.enumvalue_customname) = "StreamStatusNone" ];
    // Initially created and no actions have been taken
    STREAM_STATUS_NEW = 1 [ (gogoproto.enumvalue_customname) = "StreamStatusNew" ];
    // Running and preparing input and output destinations
    STREAM_STATUS_PREPARING = 2 [ (gogoproto.enumvalue_customname) = "StreamStatusPreparing" ];
    // Preparation is finished and is ready to consume input data
    STREAM_STATUS_PREPARED = 3 [ (gogoproto.enumvalue_customname) = "StreamStatusPrepared" ];
    // Receiving data and pending on miner to be assigned to stream
    STREAM_STATUS_PENDING = 4 [ (gogoproto.enumvalue_customname) = "StreamStatusPending" ];
    // Miner has started work on stream, but output is not ready for use
    STREAM_STATUS_PROCESSING = 5 [ (gogoproto.enumvalue_customname) = "StreamStatusProcessing" ];
    // Output destination is ready to be consumed
    STREAM_STATUS_READY = 6 [ (gogoproto.enumvalue_customname) = "StreamStatusReady" ];
    // Stream has successfully transcoded video and is now complete
    STREAM_STATUS_COMPLETED = 7 [ (gogoproto.enumvalue_customname) = "StreamStatusCompleted" ];
    // Stream has not yet received any input data and has been cancelled
    STREAM_STATUS_CANCELLED = 8 [ (gogoproto.enumvalue_customname) = "StreamStatusCancelled" ];
    // Stream has attempted to transcode video received, but problems with the transcoder or account caused it to fail
    STREAM_STATUS_FAILED = 9 [ (gogoproto.enumvalue_customname) = "StreamStatusFailed" ];
}

// The status of a stream's ingest is affected by the state of the encoder that's sending video data to the stream.
enum InputStatus {
    option (gogoproto.goproto_enum_prefix) = false;
    option (gogoproto.enum_customname) = "InputStatus";
    // The stream has been created or has ended and is not receiving any input
    INPUT_STATUS_NONE = 0 [ (gogoproto.enumvalue_customname) = "InputStatusNone" ];
    // Ingest is awaiting for incoming data
    INPUT_STATUS_PENDING = 1 [ (gogoproto.enumvalue_customname) = "InputStatusPending" ];
    // Ingest is receiving data
    INPUT_STATUS_ACTIVE = 2 [ (gogoproto.enumvalue_customname) = "InputStatusActive" ];
    // Ingest has been failed to process incoming data
    INPUT_STATUS_ERROR = 3 [ (gogoproto.enumvalue_customname) = "InputStatusError" ];
}

message Stream {
    string id = 1 [
        (gogoproto.moretags) = "gorm:\"type:char(36);\""
    ];

    string user_id = 2;
    string name = 3;

    string profile_id = 4;

    StreamStatus status = 5;
    InputStatus input_status = 6;

    uint64 stream_contract_id = 8;
    string stream_contract_address = 9;

    string input_url = 11;
    string output_url = 12;

    bool refunded = 13;

    google.protobuf.Timestamp created_at = 16 [
        (gogoproto.stdtime) = true
    ];

    google.protobuf.Timestamp updated_at = 17 [
        (gogoproto.stdtime) = true
    ];

    google.protobuf.Timestamp ready_at = 18 [
        (gogoproto.stdtime) = true
    ];

    google.protobuf.Timestamp completed_at = 19 [
        (gogoproto.stdtime) = true
    ];

    string rtmp_url = 20;
}

message Streams {
    repeated Stream items = 1;
}

message StreamProfile {

    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
		json_schema: {
			description: "Streams are representations of video to be worked on by miners on the VideoCoin Network and output consumable video based on the transcoding profile given at creation. Streams currently only support video input over RTMP. Support for input video over RTSP and HLS will be considered in future releases."
		}
	};

    string id = 1 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "ID that VideoCoin uses to uniquely identify each stream"}];
    string name = 2 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Name of the stream"}];

    string input_url = 4 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Input URL of transcoded video"}];
    string output_url = 5 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Unique output URL of transcoded video"}];

    uint64 stream_contract_id = 7 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Stream ID in VideoCoin stream chain"}];
    string stream_contract_address = 8 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Stream hex address in VideoCoin chain. Empty until stream is in prepared state"}];

    StreamStatus status = 9 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Status of the stream\'s operational state"}];
    InputStatus input_status = 10 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Status of the stream\'s video ingest"}];

    google.protobuf.Timestamp created_at = 11 [
        (gogoproto.stdtime) = true,
        (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Date and time of when stream was initially created"}
    ];

    google.protobuf.Timestamp updated_at = 17 [
        (gogoproto.stdtime) = true,
        (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Date and time of when stream\'s state was last changed"}
    ];

    google.protobuf.Timestamp ready_at = 12 [
        (gogoproto.stdtime) = true,
        (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Date and time of when stream\'s ingest has received and completed processing input video data. This field will be null until stream is in ready state"}
    ];

    google.protobuf.Timestamp completed_at = 13 [
        (gogoproto.stdtime) = true,
        (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Date and time of when stream was called to stop. This field will be null until stream is in completed state"}
    ];

    string rtmp_url = 14 [(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {description: "Unique ingest RTMP URL for stream to receive video data from encoder. This URL is used for your encoder to send data to"}];
}

message StreamProfiles {
    repeated StreamProfile items = 1;
}
