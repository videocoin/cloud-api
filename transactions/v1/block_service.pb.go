// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transactions/v1/block_service.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetBlocksRequest struct {
	Limit  uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (m *GetBlocksRequest) Reset()                    { *m = GetBlocksRequest{} }
func (m *GetBlocksRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlocksRequest) ProtoMessage()               {}
func (*GetBlocksRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlockService, []int{0} }

func (m *GetBlocksRequest) GetLimit() uint64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetBlocksRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type GetBlocksResponse struct {
	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks" json:"blocks,omitempty"`
}

func (m *GetBlocksResponse) Reset()                    { *m = GetBlocksResponse{} }
func (m *GetBlocksResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlocksResponse) ProtoMessage()               {}
func (*GetBlocksResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlockService, []int{1} }

func (m *GetBlocksResponse) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type GetBlockRequest struct {
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *GetBlockRequest) Reset()                    { *m = GetBlockRequest{} }
func (m *GetBlockRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBlockRequest) ProtoMessage()               {}
func (*GetBlockRequest) Descriptor() ([]byte, []int) { return fileDescriptorBlockService, []int{2} }

func (m *GetBlockRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetBlockResponse struct {
	Block *BlockDetail `protobuf:"bytes,1,opt,name=block" json:"block,omitempty"`
}

func (m *GetBlockResponse) Reset()                    { *m = GetBlockResponse{} }
func (m *GetBlockResponse) String() string            { return proto.CompactTextString(m) }
func (*GetBlockResponse) ProtoMessage()               {}
func (*GetBlockResponse) Descriptor() ([]byte, []int) { return fileDescriptorBlockService, []int{3} }

func (m *GetBlockResponse) GetBlock() *BlockDetail {
	if m != nil {
		return m.Block
	}
	return nil
}

func init() {
	proto.RegisterType((*GetBlocksRequest)(nil), "cloud.api.transactions.v1.GetBlocksRequest")
	proto.RegisterType((*GetBlocksResponse)(nil), "cloud.api.transactions.v1.GetBlocksResponse")
	proto.RegisterType((*GetBlockRequest)(nil), "cloud.api.transactions.v1.GetBlockRequest")
	proto.RegisterType((*GetBlockResponse)(nil), "cloud.api.transactions.v1.GetBlockResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BlockService service

type BlockServiceClient interface {
	GetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error)
	GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error)
}

type blockServiceClient struct {
	cc *grpc.ClientConn
}

func NewBlockServiceClient(cc *grpc.ClientConn) BlockServiceClient {
	return &blockServiceClient{cc}
}

func (c *blockServiceClient) GetBlocks(ctx context.Context, in *GetBlocksRequest, opts ...grpc.CallOption) (*GetBlocksResponse, error) {
	out := new(GetBlocksResponse)
	err := grpc.Invoke(ctx, "/cloud.api.transactions.v1.BlockService/GetBlocks", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockServiceClient) GetBlock(ctx context.Context, in *GetBlockRequest, opts ...grpc.CallOption) (*GetBlockResponse, error) {
	out := new(GetBlockResponse)
	err := grpc.Invoke(ctx, "/cloud.api.transactions.v1.BlockService/GetBlock", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BlockService service

type BlockServiceServer interface {
	GetBlocks(context.Context, *GetBlocksRequest) (*GetBlocksResponse, error)
	GetBlock(context.Context, *GetBlockRequest) (*GetBlockResponse, error)
}

func RegisterBlockServiceServer(s *grpc.Server, srv BlockServiceServer) {
	s.RegisterService(&_BlockService_serviceDesc, srv)
}

func _BlockService_GetBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockServiceServer).GetBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.transactions.v1.BlockService/GetBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockServiceServer).GetBlocks(ctx, req.(*GetBlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlockService_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockServiceServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.transactions.v1.BlockService/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockServiceServer).GetBlock(ctx, req.(*GetBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BlockService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.api.transactions.v1.BlockService",
	HandlerType: (*BlockServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBlocks",
			Handler:    _BlockService_GetBlocks_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _BlockService_GetBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transactions/v1/block_service.proto",
}

func init() { proto.RegisterFile("transactions/v1/block_service.proto", fileDescriptorBlockService) }

var fileDescriptorBlockService = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2e, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0x2b, 0xd6, 0x2f, 0x33, 0xd4, 0x4f, 0xca, 0xc9, 0x4f,
	0xce, 0x8e, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x92, 0x4c, 0xce, 0xc9, 0x2f, 0x4d, 0xd1, 0x4b, 0x2c, 0xc8, 0xd4, 0x43, 0x56, 0xae, 0x57, 0x66,
	0x28, 0xa5, 0x9b, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x9f, 0x9e, 0x9f,
	0x9e, 0xaf, 0x0f, 0xd6, 0x91, 0x54, 0x9a, 0x06, 0xe6, 0x81, 0x39, 0x60, 0x16, 0xc4, 0x24, 0x29,
	0x99, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0xfd, 0xc4, 0x82, 0x4c, 0xfd, 0xc4, 0xbc, 0xbc, 0xfc,
	0x92, 0x44, 0x88, 0x49, 0x10, 0x59, 0x69, 0xac, 0x8e, 0x81, 0x48, 0x2a, 0x39, 0x70, 0x09, 0xb8,
	0xa7, 0x96, 0x38, 0x81, 0x44, 0x8a, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x44, 0xb8,
	0x58, 0x73, 0x32, 0x73, 0x33, 0x4b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x82, 0x20, 0x1c, 0x21,
	0x31, 0x2e, 0xb6, 0xfc, 0xb4, 0xb4, 0xe2, 0xd4, 0x12, 0x09, 0x26, 0xb0, 0x30, 0x94, 0xa7, 0xe4,
	0xcb, 0x25, 0x88, 0x64, 0x42, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x90, 0x05, 0x17, 0x1b, 0xd8,
	0x96, 0x62, 0x09, 0x46, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x05, 0x3d, 0x9c, 0x9e, 0xd5, 0x03, 0x6b,
	0x0d, 0x82, 0xaa, 0x57, 0x52, 0xe5, 0xe2, 0x87, 0x19, 0x07, 0x73, 0x8f, 0x10, 0x17, 0x4b, 0x46,
	0x62, 0x71, 0x06, 0xd8, 0x39, 0x9c, 0x41, 0x60, 0xb6, 0x52, 0x00, 0xc2, 0xdd, 0x70, 0x4b, 0x6d,
	0xb8, 0x58, 0xc1, 0x86, 0x80, 0x15, 0x72, 0x1b, 0xa9, 0x11, 0xb2, 0xd3, 0x25, 0xb5, 0x24, 0x31,
	0x33, 0x27, 0x08, 0xa2, 0xc9, 0x68, 0x12, 0x13, 0x17, 0x0f, 0x58, 0x38, 0x18, 0x12, 0x4b, 0x42,
	0x75, 0x5c, 0x9c, 0x70, 0x8f, 0x09, 0x69, 0xe3, 0x31, 0x0c, 0x3d, 0x00, 0xa5, 0x74, 0x88, 0x53,
	0x0c, 0x71, 0xb6, 0x92, 0x58, 0xd3, 0xe5, 0x27, 0x93, 0x99, 0x04, 0x84, 0xf8, 0xc0, 0xf1, 0x07,
	0x8b, 0x9f, 0x62, 0xa1, 0x46, 0x46, 0x2e, 0x0e, 0x98, 0x6a, 0x21, 0x2d, 0x22, 0x8c, 0x84, 0x59,
	0xaf, 0x4d, 0x94, 0x5a, 0xa8, 0xed, 0x32, 0x60, 0xdb, 0xc5, 0x84, 0x44, 0x50, 0x6c, 0xd7, 0xaf,
	0x06, 0x85, 0x72, 0xad, 0x93, 0xc8, 0x89, 0x47, 0x72, 0x0c, 0x17, 0x1e, 0xc9, 0x31, 0x3c, 0x78,
	0x24, 0xc7, 0x30, 0xe3, 0xb1, 0x1c, 0x43, 0x14, 0x53, 0x99, 0x61, 0x12, 0x1b, 0x38, 0xed, 0x18,
	0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xdc, 0x3b, 0xad, 0xe7, 0x02, 0x00, 0x00,
}
