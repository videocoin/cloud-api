// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transactions/v1/action.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ActionSource int32

const (
	ActionSource_UNDETECTED ActionSource = 0
	ActionSource_ETH        ActionSource = 1
	ActionSource_VID        ActionSource = 2
)

var ActionSource_name = map[int32]string{
	0: "UNDETECTED",
	1: "ETH",
	2: "VID",
}
var ActionSource_value = map[string]int32{
	"UNDETECTED": 0,
	"ETH":        1,
	"VID":        2,
}

func (x ActionSource) String() string {
	return proto.EnumName(ActionSource_name, int32(x))
}
func (ActionSource) EnumDescriptor() ([]byte, []int) { return fileDescriptorAction, []int{0} }

type ActionType int32

const (
	ActionType_UNKNOWN                              ActionType = 0
	ActionType_DEPOSIT                              ActionType = 1
	ActionType_STREAM_CREATED                       ActionType = 2
	ActionType_STREAM_ENDED                         ActionType = 3
	ActionType_INPUT_CHUNK_ADDED                    ActionType = 4
	ActionType_CHUNK_PROOF_SUBMITTED                ActionType = 5
	ActionType_CHUNK_PROOF_VALIDATED                ActionType = 6
	ActionType_CHUNK_PROOF_SCRAPPED                 ActionType = 14
	ActionType_ACCOUNT_FUNDED                       ActionType = 7
	ActionType_STREAM_REQUESTED                     ActionType = 8
	ActionType_STREAM_REFUNDED                      ActionType = 15
	ActionType_STREAM_APPROVED                      ActionType = 9
	ActionType_VALIDATOR_ADDED                      ActionType = 10
	ActionType_VALIDATOR_REMOVED                    ActionType = 11
	ActionType_REFUND_ALLOWED                       ActionType = 12
	ActionType_REFUND_REVOKED                       ActionType = 13
	ActionType_TRANSFER_EXECUTED                    ActionType = 16
	ActionType_OUT_OF_FUNDS                         ActionType = 17
	ActionType_STREAM_DEPOSITED                     ActionType = 18
	ActionType_STREAM_MANAGER_OWNERSHIP_TRANSFERRED ActionType = 19
	ActionType_BRIDGE_FUNDED                        ActionType = 20
	ActionType_BRIDGE_TRANSFER_WITHIN_LIMITS        ActionType = 21
	ActionType_BRIDGE_TRANSFER_EXCEEDED_LIMITS      ActionType = 22
	ActionType_BRIDGE_TRANSFER_REJECTED             ActionType = 23
	ActionType_BRIDGE_OWNERSHIP_TRANSFERRED         ActionType = 24
	ActionType_DEPOSIT_BANK_ACCOUNT                 ActionType = 25
)

var ActionType_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "DEPOSIT",
	2:  "STREAM_CREATED",
	3:  "STREAM_ENDED",
	4:  "INPUT_CHUNK_ADDED",
	5:  "CHUNK_PROOF_SUBMITTED",
	6:  "CHUNK_PROOF_VALIDATED",
	14: "CHUNK_PROOF_SCRAPPED",
	7:  "ACCOUNT_FUNDED",
	8:  "STREAM_REQUESTED",
	15: "STREAM_REFUNDED",
	9:  "STREAM_APPROVED",
	10: "VALIDATOR_ADDED",
	11: "VALIDATOR_REMOVED",
	12: "REFUND_ALLOWED",
	13: "REFUND_REVOKED",
	16: "TRANSFER_EXECUTED",
	17: "OUT_OF_FUNDS",
	18: "STREAM_DEPOSITED",
	19: "STREAM_MANAGER_OWNERSHIP_TRANSFERRED",
	20: "BRIDGE_FUNDED",
	21: "BRIDGE_TRANSFER_WITHIN_LIMITS",
	22: "BRIDGE_TRANSFER_EXCEEDED_LIMITS",
	23: "BRIDGE_TRANSFER_REJECTED",
	24: "BRIDGE_OWNERSHIP_TRANSFERRED",
	25: "DEPOSIT_BANK_ACCOUNT",
}
var ActionType_value = map[string]int32{
	"UNKNOWN":                              0,
	"DEPOSIT":                              1,
	"STREAM_CREATED":                       2,
	"STREAM_ENDED":                         3,
	"INPUT_CHUNK_ADDED":                    4,
	"CHUNK_PROOF_SUBMITTED":                5,
	"CHUNK_PROOF_VALIDATED":                6,
	"CHUNK_PROOF_SCRAPPED":                 14,
	"ACCOUNT_FUNDED":                       7,
	"STREAM_REQUESTED":                     8,
	"STREAM_REFUNDED":                      15,
	"STREAM_APPROVED":                      9,
	"VALIDATOR_ADDED":                      10,
	"VALIDATOR_REMOVED":                    11,
	"REFUND_ALLOWED":                       12,
	"REFUND_REVOKED":                       13,
	"TRANSFER_EXECUTED":                    16,
	"OUT_OF_FUNDS":                         17,
	"STREAM_DEPOSITED":                     18,
	"STREAM_MANAGER_OWNERSHIP_TRANSFERRED": 19,
	"BRIDGE_FUNDED":                        20,
	"BRIDGE_TRANSFER_WITHIN_LIMITS":        21,
	"BRIDGE_TRANSFER_EXCEEDED_LIMITS":      22,
	"BRIDGE_TRANSFER_REJECTED":             23,
	"BRIDGE_OWNERSHIP_TRANSFERRED":         24,
	"DEPOSIT_BANK_ACCOUNT":                 25,
}

func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}
func (ActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptorAction, []int{1} }

type Action struct {
	Source    ActionSource                `protobuf:"varint,1,opt,name=source,proto3,enum=cloud.api.transactions.v1.ActionSource" json:"source,omitempty"`
	Hash      string                      `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	From      string                      `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To        string                      `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	CreatedAt *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Value     string                      `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	Type      ActionType                  `protobuf:"varint,7,opt,name=type,proto3,enum=cloud.api.transactions.v1.ActionType" json:"type,omitempty"`
}

func (m *Action) Reset()                    { *m = Action{} }
func (m *Action) String() string            { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()               {}
func (*Action) Descriptor() ([]byte, []int) { return fileDescriptorAction, []int{0} }

func (m *Action) GetSource() ActionSource {
	if m != nil {
		return m.Source
	}
	return ActionSource_UNDETECTED
}

func (m *Action) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Action) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Action) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Action) GetCreatedAt() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Action) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Action) GetType() ActionType {
	if m != nil {
		return m.Type
	}
	return ActionType_UNKNOWN
}

func init() {
	proto.RegisterType((*Action)(nil), "cloud.api.transactions.v1.Action")
	proto.RegisterEnum("cloud.api.transactions.v1.ActionSource", ActionSource_name, ActionSource_value)
	proto.RegisterEnum("cloud.api.transactions.v1.ActionType", ActionType_name, ActionType_value)
}

func init() { proto.RegisterFile("transactions/v1/action.proto", fileDescriptorAction) }

var fileDescriptorAction = []byte{
	// 666 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xcf, 0x4e, 0xdb, 0x4a,
	0x14, 0xc6, 0x93, 0x10, 0x92, 0xcb, 0x01, 0xc2, 0x30, 0x84, 0x7b, 0x0d, 0xe2, 0x86, 0xdc, 0x7f,
	0xba, 0x11, 0x52, 0x9d, 0x42, 0x57, 0xac, 0x2a, 0xc7, 0x73, 0x42, 0x5c, 0x12, 0xdb, 0x1d, 0xdb,
	0x09, 0xea, 0xc6, 0x32, 0xc1, 0x84, 0x48, 0x04, 0x47, 0x89, 0x13, 0x89, 0x87, 0xe8, 0xbe, 0x8f,
	0xd4, 0x65, 0x1f, 0xa1, 0xa2, 0x4f, 0xd1, 0x5d, 0x35, 0x63, 0x07, 0x52, 0xd4, 0xaa, 0xbb, 0x73,
	0x7e, 0xfe, 0xce, 0x37, 0xdf, 0x19, 0xdb, 0x70, 0x10, 0x4f, 0x82, 0xbb, 0x69, 0xd0, 0x8f, 0x87,
	0xd1, 0xdd, 0xb4, 0x3e, 0x3f, 0xae, 0x27, 0xa5, 0x3a, 0x9e, 0x44, 0x71, 0x44, 0xf7, 0xfa, 0xb7,
	0xd1, 0xec, 0x4a, 0x0d, 0xc6, 0x43, 0x75, 0x59, 0xa7, 0xce, 0x8f, 0xf7, 0x5f, 0x0c, 0x86, 0xf1,
	0xcd, 0xec, 0x52, 0xed, 0x47, 0xa3, 0xfa, 0x20, 0x1a, 0x44, 0x75, 0x39, 0x71, 0x39, 0xbb, 0x96,
	0x9d, 0x6c, 0x64, 0x95, 0x38, 0xed, 0x1f, 0x0e, 0xa2, 0x68, 0x70, 0x1b, 0x3e, 0xa9, 0xe2, 0xe1,
	0x28, 0x9c, 0xc6, 0xc1, 0x68, 0x9c, 0x08, 0xfe, 0x7e, 0x9f, 0x83, 0x82, 0x26, 0xed, 0xe9, 0x6b,
	0x28, 0x4c, 0xa3, 0xd9, 0xa4, 0x1f, 0x2a, 0xd9, 0x6a, 0xb6, 0x56, 0x3a, 0xf9, 0x5f, 0xfd, 0x69,
	0x0c, 0x35, 0x19, 0x71, 0xa4, 0x9c, 0xa7, 0x63, 0x94, 0x42, 0xfe, 0x26, 0x98, 0xde, 0x28, 0xb9,
	0x6a, 0xb6, 0xb6, 0xc6, 0x65, 0x2d, 0xd8, 0xf5, 0x24, 0x1a, 0x29, 0x2b, 0x09, 0x13, 0x35, 0x2d,
	0x41, 0x2e, 0x8e, 0x94, 0xbc, 0x24, 0xb9, 0x38, 0xa2, 0xa7, 0x00, 0xfd, 0x49, 0x18, 0xc4, 0xe1,
	0x95, 0x1f, 0xc4, 0xca, 0x6a, 0x35, 0x5b, 0x5b, 0x3f, 0xd9, 0x57, 0x93, 0xe4, 0xea, 0x22, 0xb9,
	0xea, 0x2e, 0x92, 0xf3, 0xb5, 0x54, 0xad, 0xc5, 0xb4, 0x0c, 0xab, 0xf3, 0xe0, 0x76, 0x16, 0x2a,
	0x05, 0xe9, 0x96, 0x34, 0xf4, 0x14, 0xf2, 0xf1, 0xfd, 0x38, 0x54, 0x8a, 0x72, 0x8f, 0xff, 0x7e,
	0xb9, 0x87, 0x7b, 0x3f, 0x0e, 0xb9, 0x1c, 0x39, 0x7a, 0x09, 0x1b, 0xcb, 0xbb, 0xd1, 0x12, 0x80,
	0x67, 0x32, 0x74, 0x51, 0x77, 0x91, 0x91, 0x0c, 0x2d, 0xc2, 0x0a, 0xba, 0x2d, 0x92, 0x15, 0x45,
	0xd7, 0x60, 0x24, 0x77, 0xf4, 0x35, 0x0f, 0xf0, 0x64, 0x43, 0xd7, 0xa1, 0xe8, 0x99, 0xe7, 0xa6,
	0xd5, 0x33, 0x49, 0x46, 0x34, 0x0c, 0x6d, 0xcb, 0x31, 0x5c, 0x92, 0xa5, 0x14, 0x4a, 0x8e, 0xcb,
	0x51, 0xeb, 0xf8, 0x3a, 0x47, 0x4d, 0xd8, 0xe5, 0x28, 0x81, 0x8d, 0x94, 0xa1, 0xc9, 0x90, 0x91,
	0x15, 0xba, 0x0b, 0xdb, 0x86, 0x69, 0x7b, 0xae, 0xaf, 0xb7, 0x3c, 0xf3, 0xdc, 0xd7, 0x98, 0xc0,
	0x79, 0xba, 0x07, 0xbb, 0x09, 0xb0, 0xb9, 0x65, 0x35, 0x7d, 0xc7, 0x6b, 0x74, 0x0c, 0x57, 0x78,
	0xac, 0x3e, 0x7f, 0xd4, 0xd5, 0xda, 0x06, 0x93, 0xf6, 0x05, 0xaa, 0x40, 0xf9, 0xbb, 0x29, 0x9d,
	0x6b, 0xb6, 0x8d, 0x8c, 0x94, 0x44, 0x18, 0x4d, 0xd7, 0x2d, 0xcf, 0x74, 0xfd, 0xa6, 0x27, 0x8f,
	0x2e, 0xd2, 0x32, 0x90, 0x34, 0x0c, 0xc7, 0xb7, 0x1e, 0x3a, 0xc2, 0xe3, 0x37, 0xba, 0x03, 0x5b,
	0x8f, 0x34, 0x95, 0x6e, 0x2d, 0x41, 0xcd, 0xb6, 0xb9, 0xd5, 0x45, 0x46, 0xd6, 0x04, 0x4c, 0x0f,
	0xb7, 0x78, 0x1a, 0x1c, 0xc4, 0x3e, 0x4f, 0x90, 0x63, 0x47, 0x6a, 0xd7, 0xc5, 0xf9, 0x89, 0x9d,
	0xaf, 0xb5, 0xdb, 0x56, 0x0f, 0x19, 0xd9, 0x58, 0x62, 0x1c, 0xbb, 0xd6, 0x39, 0x32, 0xb2, 0x29,
	0xc6, 0x5d, 0xae, 0x99, 0x4e, 0x13, 0xb9, 0x8f, 0x17, 0xa8, 0x7b, 0x22, 0x14, 0x11, 0xf7, 0x66,
	0x79, 0xae, 0x6f, 0x35, 0x65, 0x7a, 0x87, 0x6c, 0x2f, 0x85, 0x4f, 0x6f, 0x1c, 0x19, 0xa1, 0xb4,
	0x06, 0xff, 0xa6, 0xb4, 0xa3, 0x99, 0xda, 0x19, 0x72, 0xdf, 0xea, 0x99, 0xc8, 0x9d, 0x96, 0x61,
	0xfb, 0x0b, 0x5f, 0x8e, 0x8c, 0xec, 0xd0, 0x6d, 0xd8, 0x6c, 0x70, 0x83, 0x9d, 0xe1, 0xe2, 0x3e,
	0xca, 0xf4, 0x2f, 0xf8, 0x33, 0x45, 0x8f, 0x11, 0x7a, 0x86, 0xdb, 0x32, 0x4c, 0xbf, 0x6d, 0x74,
	0x0c, 0xd7, 0x21, 0xbb, 0xf4, 0x1f, 0x38, 0x7c, 0x2e, 0xc1, 0x0b, 0x1d, 0x91, 0x21, 0x5b, 0x88,
	0x7e, 0xa7, 0x07, 0xa0, 0x3c, 0x17, 0x71, 0x7c, 0x93, 0x7c, 0x51, 0x7f, 0xd0, 0x2a, 0x1c, 0xa4,
	0x4f, 0x7f, 0x1c, 0x4d, 0x11, 0x6f, 0x31, 0xdd, 0xc9, 0x6f, 0x68, 0xe2, 0x9b, 0x48, 0x5e, 0x1c,
	0xd9, 0x6b, 0x94, 0x3f, 0x3e, 0x54, 0x32, 0x9f, 0x1e, 0x2a, 0x99, 0xcf, 0x0f, 0x95, 0xcc, 0x87,
	0x2f, 0x95, 0xcc, 0xbb, 0xdc, 0xfc, 0xf8, 0xb2, 0x20, 0xff, 0x99, 0x57, 0xdf, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x4e, 0x65, 0xaa, 0x78, 0x65, 0x04, 0x00, 0x00,
}
