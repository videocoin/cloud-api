// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transactions/v1/account_service.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetAccountRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *GetAccountRequest) Reset()                    { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()               {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptorAccountService, []int{0} }

func (m *GetAccountRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetAccountResponse struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *GetAccountResponse) Reset()                    { *m = GetAccountResponse{} }
func (m *GetAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAccountResponse) ProtoMessage()               {}
func (*GetAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptorAccountService, []int{1} }

func (m *GetAccountResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func init() {
	proto.RegisterType((*GetAccountRequest)(nil), "cloud.api.transactions.v1.GetAccountRequest")
	proto.RegisterType((*GetAccountResponse)(nil), "cloud.api.transactions.v1.GetAccountResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AccountService service

type AccountServiceClient interface {
	GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*GetAccountResponse, error) {
	out := new(GetAccountResponse)
	err := grpc.Invoke(ctx, "/cloud.api.transactions.v1.AccountService/GetAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountService service

type AccountServiceServer interface {
	GetAccount(context.Context, *GetAccountRequest) (*GetAccountResponse, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.transactions.v1.AccountService/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).GetAccount(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.api.transactions.v1.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccount",
			Handler:    _AccountService_GetAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transactions/v1/account_service.proto",
}

func init() { proto.RegisterFile("transactions/v1/account_service.proto", fileDescriptorAccountService) }

var fileDescriptorAccountService = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2d, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0x2b, 0xd6, 0x2f, 0x33, 0xd4, 0x4f, 0x4c, 0x4e, 0xce,
	0x2f, 0xcd, 0x2b, 0x89, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x92, 0x4c, 0xce, 0xc9, 0x2f, 0x4d, 0xd1, 0x4b, 0x2c, 0xc8, 0xd4, 0x43, 0xd6, 0xa0,
	0x57, 0x66, 0x28, 0xa5, 0x9b, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x9f,
	0x9e, 0x9f, 0x9e, 0xaf, 0x0f, 0xd6, 0x91, 0x54, 0x9a, 0x06, 0xe6, 0x81, 0x39, 0x60, 0x16, 0xc4,
	0x24, 0x29, 0x99, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0xfd, 0xc4, 0x82, 0x4c, 0xfd, 0xc4, 0xbc,
	0xbc, 0xfc, 0x92, 0x44, 0x88, 0x49, 0x10, 0x59, 0x59, 0x1c, 0xce, 0x81, 0x48, 0x2b, 0xe9, 0x72,
	0x09, 0xba, 0xa7, 0x96, 0x38, 0x42, 0xc4, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x24,
	0xb8, 0xd8, 0x13, 0x53, 0x52, 0x8a, 0x52, 0x8b, 0x8b, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83,
	0x60, 0x5c, 0xa5, 0x20, 0x2e, 0x21, 0x64, 0xe5, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42, 0x36,
	0x5c, 0xec, 0x50, 0x53, 0xc1, 0xea, 0xb9, 0x8d, 0x94, 0xf4, 0x70, 0xfa, 0x4e, 0x0f, 0xa6, 0x19,
	0xa6, 0xc5, 0x68, 0x3e, 0x23, 0x17, 0x1f, 0x54, 0x30, 0x18, 0x12, 0x44, 0x42, 0x3d, 0x8c, 0x5c,
	0x5c, 0x08, 0x7b, 0x84, 0x74, 0xf0, 0x18, 0x87, 0xe1, 0x7a, 0x29, 0x5d, 0x22, 0x55, 0x43, 0x1c,
	0xaf, 0xa4, 0xd8, 0x74, 0xf9, 0xc9, 0x64, 0x26, 0x69, 0x21, 0x49, 0x70, 0x00, 0x22, 0x02, 0x48,
	0xbf, 0x1a, 0xea, 0xe9, 0x5a, 0x27, 0x91, 0x13, 0x8f, 0xe4, 0x18, 0x2e, 0x3c, 0x92, 0x63, 0x78,
	0xf0, 0x48, 0x8e, 0x61, 0xc6, 0x63, 0x39, 0x86, 0x28, 0xa6, 0x32, 0xc3, 0x24, 0x36, 0x70, 0x08,
	0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x38, 0xb4, 0xb0, 0xf1, 0x01, 0x00, 0x00,
}
