// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transactions/v1/status_service.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetStatusRequest struct {
}

func (m *GetStatusRequest) Reset()                    { *m = GetStatusRequest{} }
func (m *GetStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStatusRequest) ProtoMessage()               {}
func (*GetStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptorStatusService, []int{0} }

type GetStatusResponse struct {
	Status *Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *GetStatusResponse) Reset()                    { *m = GetStatusResponse{} }
func (m *GetStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*GetStatusResponse) ProtoMessage()               {}
func (*GetStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptorStatusService, []int{1} }

func (m *GetStatusResponse) GetStatus() *Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*GetStatusRequest)(nil), "cloud.api.transactions.v1.GetStatusRequest")
	proto.RegisterType((*GetStatusResponse)(nil), "cloud.api.transactions.v1.GetStatusResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for StatusService service

type StatusServiceClient interface {
	GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusResponse, error)
}

type statusServiceClient struct {
	cc *grpc.ClientConn
}

func NewStatusServiceClient(cc *grpc.ClientConn) StatusServiceClient {
	return &statusServiceClient{cc}
}

func (c *statusServiceClient) GetStatus(ctx context.Context, in *GetStatusRequest, opts ...grpc.CallOption) (*GetStatusResponse, error) {
	out := new(GetStatusResponse)
	err := grpc.Invoke(ctx, "/cloud.api.transactions.v1.StatusService/GetStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StatusService service

type StatusServiceServer interface {
	GetStatus(context.Context, *GetStatusRequest) (*GetStatusResponse, error)
}

func RegisterStatusServiceServer(s *grpc.Server, srv StatusServiceServer) {
	s.RegisterService(&_StatusService_serviceDesc, srv)
}

func _StatusService_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatusServiceServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.transactions.v1.StatusService/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatusServiceServer).GetStatus(ctx, req.(*GetStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StatusService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.api.transactions.v1.StatusService",
	HandlerType: (*StatusServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _StatusService_GetStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transactions/v1/status_service.proto",
}

func init() { proto.RegisterFile("transactions/v1/status_service.proto", fileDescriptorStatusService) }

var fileDescriptorStatusService = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x29, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0x4c, 0x2e, 0xc9, 0xcc, 0xcf, 0x2b, 0xd6, 0x2f, 0x33, 0xd4, 0x2f, 0x2e, 0x49, 0x2c,
	0x29, 0x2d, 0x8e, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0x92, 0x4c, 0xce, 0xc9, 0x2f, 0x4d, 0xd1, 0x4b, 0x2c, 0xc8, 0xd4, 0x43, 0x56, 0xaf, 0x57,
	0x66, 0x28, 0xa5, 0x9b, 0x9e, 0x59, 0x92, 0x51, 0x9a, 0xa4, 0x97, 0x9c, 0x9f, 0xab, 0x9f, 0x9e,
	0x9f, 0x9e, 0xaf, 0x0f, 0xd6, 0x91, 0x54, 0x9a, 0x06, 0xe6, 0x81, 0x39, 0x60, 0x16, 0xc4, 0x24,
	0x29, 0x99, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0xfd, 0xc4, 0x82, 0x4c, 0xfd, 0xc4, 0xbc, 0xbc,
	0xfc, 0x92, 0x44, 0x88, 0x49, 0x50, 0x59, 0xec, 0xae, 0x81, 0xc8, 0x2a, 0x09, 0x71, 0x09, 0xb8,
	0xa7, 0x96, 0x04, 0x83, 0x85, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x94, 0xfc, 0xb8, 0x04,
	0x91, 0xc4, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x2c, 0xb9, 0xd8, 0x20, 0x1a, 0x25, 0x18,
	0x15, 0x18, 0x35, 0xb8, 0x8d, 0x14, 0xf5, 0x70, 0xba, 0x5f, 0x0f, 0xaa, 0x15, 0xaa, 0xc1, 0xa8,
	0x9f, 0x91, 0x8b, 0x17, 0x22, 0x14, 0x0c, 0x09, 0x01, 0xa1, 0x3a, 0x2e, 0x4e, 0xb8, 0x0d, 0x42,
	0xda, 0x78, 0x4c, 0x42, 0x77, 0x9b, 0x94, 0x0e, 0x71, 0x8a, 0x21, 0x8e, 0x56, 0x12, 0x6b, 0xba,
	0xfc, 0x64, 0x32, 0x93, 0x80, 0x10, 0x1f, 0x38, 0x6c, 0xe0, 0x7e, 0x77, 0x12, 0x39, 0xf1, 0x48,
	0x8e, 0xe1, 0xc2, 0x23, 0x39, 0x86, 0x07, 0x8f, 0xe4, 0x18, 0x66, 0x3c, 0x96, 0x63, 0x88, 0x62,
	0x2a, 0x33, 0x4c, 0x62, 0x03, 0x07, 0x89, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x01, 0xb5, 0x7a,
	0x7c, 0xc0, 0x01, 0x00, 0x00,
}
