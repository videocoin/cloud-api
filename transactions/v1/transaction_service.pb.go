// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transactions/v1/transaction_service.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import context "golang.org/x/net/context"
import grpc "google.golang.org/grpc"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetTransactionsRequest struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *GetTransactionsRequest) Reset()         { *m = GetTransactionsRequest{} }
func (m *GetTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsRequest) ProtoMessage()    {}
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorTransactionService, []int{0}
}

func (m *GetTransactionsRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetTransactionsResponse struct {
	Transactions []*Transaction `protobuf:"bytes,1,rep,name=transactions" json:"transactions,omitempty"`
}

func (m *GetTransactionsResponse) Reset()         { *m = GetTransactionsResponse{} }
func (m *GetTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionsResponse) ProtoMessage()    {}
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorTransactionService, []int{1}
}

func (m *GetTransactionsResponse) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

type GetTransactionRequest struct {
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (m *GetTransactionRequest) Reset()         { *m = GetTransactionRequest{} }
func (m *GetTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequest) ProtoMessage()    {}
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorTransactionService, []int{2}
}

func (m *GetTransactionRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type GetTransactionResponse struct {
	Transaction *Transaction `protobuf:"bytes,1,opt,name=transaction" json:"transaction,omitempty"`
}

func (m *GetTransactionResponse) Reset()         { *m = GetTransactionResponse{} }
func (m *GetTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*GetTransactionResponse) ProtoMessage()    {}
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorTransactionService, []int{3}
}

func (m *GetTransactionResponse) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func init() {
	proto.RegisterType((*GetTransactionsRequest)(nil), "cloud.api.transactions.v1.GetTransactionsRequest")
	proto.RegisterType((*GetTransactionsResponse)(nil), "cloud.api.transactions.v1.GetTransactionsResponse")
	proto.RegisterType((*GetTransactionRequest)(nil), "cloud.api.transactions.v1.GetTransactionRequest")
	proto.RegisterType((*GetTransactionResponse)(nil), "cloud.api.transactions.v1.GetTransactionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TransactionService service

type TransactionServiceClient interface {
	GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (*GetTransactionsResponse, error)
	GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error)
}

type transactionServiceClient struct {
	cc *grpc.ClientConn
}

func NewTransactionServiceClient(cc *grpc.ClientConn) TransactionServiceClient {
	return &transactionServiceClient{cc}
}

func (c *transactionServiceClient) GetTransactions(ctx context.Context, in *GetTransactionsRequest, opts ...grpc.CallOption) (*GetTransactionsResponse, error) {
	out := new(GetTransactionsResponse)
	err := grpc.Invoke(ctx, "/cloud.api.transactions.v1.TransactionService/GetTransactions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionServiceClient) GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*GetTransactionResponse, error) {
	out := new(GetTransactionResponse)
	err := grpc.Invoke(ctx, "/cloud.api.transactions.v1.TransactionService/GetTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TransactionService service

type TransactionServiceServer interface {
	GetTransactions(context.Context, *GetTransactionsRequest) (*GetTransactionsResponse, error)
	GetTransaction(context.Context, *GetTransactionRequest) (*GetTransactionResponse, error)
}

func RegisterTransactionServiceServer(s *grpc.Server, srv TransactionServiceServer) {
	s.RegisterService(&_TransactionService_serviceDesc, srv)
}

func _TransactionService_GetTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServiceServer).GetTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.transactions.v1.TransactionService/GetTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServiceServer).GetTransactions(ctx, req.(*GetTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TransactionService_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServiceServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.transactions.v1.TransactionService/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServiceServer).GetTransaction(ctx, req.(*GetTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TransactionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.api.transactions.v1.TransactionService",
	HandlerType: (*TransactionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTransactions",
			Handler:    _TransactionService_GetTransactions_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _TransactionService_GetTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transactions/v1/transaction_service.proto",
}

func init() {
	proto.RegisterFile("transactions/v1/transaction_service.proto", fileDescriptorTransactionService)
}

var fileDescriptorTransactionService = []byte{
	// 362 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x4b, 0xc3, 0x30,
	0x14, 0xc0, 0xdb, 0x29, 0x8a, 0x99, 0x28, 0x04, 0xff, 0x6c, 0x75, 0x94, 0xad, 0x07, 0x99, 0x88,
	0x89, 0xad, 0xdf, 0xc0, 0x8b, 0xe2, 0x71, 0x7a, 0xf2, 0x22, 0x69, 0x17, 0xbb, 0xc2, 0x6c, 0x6a,
	0x93, 0xf6, 0x32, 0x76, 0xf1, 0x2b, 0x78, 0x51, 0xfc, 0x42, 0x9e, 0x44, 0xf0, 0x0b, 0xc8, 0xf4,
	0x83, 0x88, 0x49, 0x2b, 0xd9, 0xd4, 0xb1, 0xdd, 0xde, 0x23, 0xf9, 0xbd, 0xf7, 0x7b, 0x79, 0x01,
	0x7b, 0x22, 0x25, 0x31, 0x27, 0x81, 0x88, 0x58, 0xcc, 0x71, 0xee, 0x62, 0x2d, 0xbf, 0xe2, 0x34,
	0xcd, 0xa3, 0x80, 0xa2, 0x24, 0x65, 0x82, 0xc1, 0x7a, 0xd0, 0x67, 0x59, 0x17, 0x91, 0x24, 0x42,
	0x3a, 0x84, 0x72, 0xd7, 0x3a, 0x08, 0x23, 0xd1, 0xcb, 0x7c, 0x14, 0xb0, 0x1b, 0x1c, 0xb2, 0x90,
	0x61, 0x49, 0xf8, 0xd9, 0xb5, 0xcc, 0x64, 0x22, 0x23, 0x55, 0xc9, 0x6a, 0x84, 0x8c, 0x85, 0x7d,
	0x8a, 0x49, 0x12, 0x61, 0x12, 0xc7, 0x4c, 0x10, 0x55, 0x49, 0x9d, 0xb6, 0xa6, 0x28, 0xa9, 0x2b,
	0x8e, 0x07, 0xb6, 0x4e, 0xa8, 0xb8, 0xd0, 0xee, 0x75, 0xe8, 0x6d, 0x46, 0xb9, 0x80, 0x35, 0xb0,
	0x4c, 0xba, 0xdd, 0x94, 0x72, 0x5e, 0x33, 0x9b, 0x66, 0x7b, 0xa5, 0x53, 0xa6, 0x0e, 0x05, 0xdb,
	0xbf, 0x18, 0x9e, 0xb0, 0x98, 0x53, 0x78, 0x06, 0x56, 0xf5, 0x9e, 0x35, 0xb3, 0xb9, 0xd0, 0xae,
	0x7a, 0xbb, 0xe8, 0xdf, 0x81, 0x91, 0x56, 0xa6, 0x33, 0xc6, 0x3a, 0xfb, 0x60, 0x73, 0xbc, 0x4d,
	0x69, 0x06, 0xc1, 0x62, 0x8f, 0xf0, 0x5e, 0xa1, 0x25, 0x63, 0xc7, 0x9f, 0x9c, 0xe3, 0x47, 0xe9,
	0x14, 0x54, 0xb5, 0xb2, 0x12, 0x9a, 0xdd, 0x48, 0x47, 0xbd, 0x97, 0x0a, 0x80, 0xda, 0xe1, 0xb9,
	0xda, 0x29, 0x7c, 0x32, 0xc1, 0xfa, 0xc4, 0x7b, 0x40, 0x77, 0x4a, 0xfd, 0xbf, 0xdf, 0xdb, 0xf2,
	0xe6, 0x41, 0xd4, 0x6c, 0x4e, 0xeb, 0xee, 0xed, 0xf3, 0xbe, 0xb2, 0x03, 0xeb, 0xf2, 0x03, 0xe4,
	0x2e, 0x2e, 0x56, 0x84, 0x07, 0x45, 0x30, 0x84, 0x8f, 0x26, 0x58, 0x1b, 0xc7, 0xe1, 0xe1, 0xcc,
	0x9d, 0x4a, 0x37, 0x77, 0x0e, 0xa2, 0x50, 0x73, 0xa4, 0x5a, 0x03, 0x5a, 0xa5, 0x9a, 0xc6, 0xe1,
	0xc1, 0xf7, 0xce, 0x86, 0xc7, 0x1b, 0xcf, 0x23, 0xdb, 0x78, 0x1d, 0xd9, 0xc6, 0xfb, 0xc8, 0x36,
	0x1e, 0x3e, 0x6c, 0xe3, 0xb2, 0x92, 0xbb, 0xfe, 0x92, 0xfc, 0x99, 0x47, 0x5f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x66, 0x60, 0x36, 0x49, 0x51, 0x03, 0x00, 0x00,
}
