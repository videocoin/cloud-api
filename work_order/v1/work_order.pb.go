// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: work_order/v1/work_order.proto

package v1

import (
	fmt "fmt"
	v1 "github.com/VideoCoin/cloud-api/profiles/v1"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type WorkOrderStatus int32

const (
	WorkOrderStatusNone            WorkOrderStatus = 0
	WorkOrderStatusNew             WorkOrderStatus = 1
	WorkOrderStatusPendingApproval WorkOrderStatus = 2
	WorkOrderStatusApproved        WorkOrderStatus = 3
	WorkOrderStatusWorkStarted     WorkOrderStatus = 4
	WorkOrderStatusTranscoding     WorkOrderStatus = 5
	WorkOrderStatusCanceled        WorkOrderStatus = 6
	WorkOrderStatusFailed          WorkOrderStatus = 7
	WorkOrderStatusCompleted       WorkOrderStatus = 8
	WorkOrderStatusReady           WorkOrderStatus = 9
)

var WorkOrderStatus_name = map[int32]string{
	0: "none",
	1: "new",
	2: "pending_approval",
	3: "approved",
	4: "work_started",
	5: "transcoding",
	6: "canceld",
	7: "failed",
	8: "completed",
	9: "ready",
}

var WorkOrderStatus_value = map[string]int32{
	"none":             0,
	"new":              1,
	"pending_approval": 2,
	"approved":         3,
	"work_started":     4,
	"transcoding":      5,
	"canceld":          6,
	"failed":           7,
	"completed":        8,
	"ready":            9,
}

func (x WorkOrderStatus) String() string {
	return proto.EnumName(WorkOrderStatus_name, int32(x))
}

func (WorkOrderStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7c88e223a03237b4, []int{0}
}

type IngestStatus int32

const (
	IngestStatusNone     IngestStatus = 0
	IngestStatusActive   IngestStatus = 1
	IngestStatusInactive IngestStatus = 2
	IngestStatusError    IngestStatus = 3
)

var IngestStatus_name = map[int32]string{
	0: "ingest_status_none",
	1: "ingest_status_active",
	2: "ingest_status_inactive",
	3: "ingest_status_error",
}

var IngestStatus_value = map[string]int32{
	"ingest_status_none":     0,
	"ingest_status_active":   1,
	"ingest_status_inactive": 2,
	"ingest_status_error":    3,
}

func (x IngestStatus) String() string {
	return proto.EnumName(IngestStatus_name, int32(x))
}

func (IngestStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7c88e223a03237b4, []int{1}
}

type WorkOrder struct {
	Id                   uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TranscoderId         string       `protobuf:"bytes,2,opt,name=transcoder_id,json=transcoderId,proto3" json:"transcoder_id,omitempty"`
	ContractAddress      string       `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	WalletAddress        string       `protobuf:"bytes,4,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	StreamId             int64        `protobuf:"varint,7,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	InputUrl             string       `protobuf:"bytes,9,opt,name=input_url,json=inputUrl,proto3" json:"input_url,omitempty"`
	OutputUrl            string       `protobuf:"bytes,10,opt,name=output_url,json=outputUrl,proto3" json:"output_url,omitempty"`
	Status               string       `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	Chunks               []byte       `protobuf:"bytes,12,opt,name=chunks,proto3" json:"chunks,omitempty" gorm:"chunks;type:json"sql:"type:json"`
	CreatedAt            int64        `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            int64        `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Worker               []byte       `protobuf:"bytes,15,opt,name=worker,proto3" json:"worker,omitempty" gorm:"worker;type:binary(32);DEFAULT:NULL"sql:"type:binary(32);DEFAULT:null"`
	MaxWork              float32      `protobuf:"fixed32,16,opt,name=max_work,json=maxWork,proto3" json:"max_work,omitempty"`
	MinWork              float32      `protobuf:"fixed32,17,opt,name=min_work,json=minWork,proto3" json:"min_work,omitempty"`
	ActualWork           float32      `protobuf:"fixed32,18,opt,name=actual_work,json=actualWork,proto3" json:"actual_work,omitempty"`
	ProfileId            v1.ProfileId `protobuf:"varint,19,opt,name=profile_id,json=profileId,proto3,enum=cloud.api.profiles.v1.ProfileId" json:"profile_id,omitempty"`
	Refunded             bool         `protobuf:"varint,20,opt,name=refunded,proto3" json:"refunded,omitempty"`
	IngestStatus         IngestStatus `protobuf:"varint,21,opt,name=ingest_status,json=ingestStatus,proto3,enum=cloud.api.work_order.v1.IngestStatus" json:"ingest_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WorkOrder) Reset()         { *m = WorkOrder{} }
func (m *WorkOrder) String() string { return proto.CompactTextString(m) }
func (*WorkOrder) ProtoMessage()    {}
func (*WorkOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c88e223a03237b4, []int{0}
}
func (m *WorkOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkOrder.Unmarshal(m, b)
}
func (m *WorkOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkOrder.Marshal(b, m, deterministic)
}
func (m *WorkOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkOrder.Merge(m, src)
}
func (m *WorkOrder) XXX_Size() int {
	return xxx_messageInfo_WorkOrder.Size(m)
}
func (m *WorkOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkOrder.DiscardUnknown(m)
}

var xxx_messageInfo_WorkOrder proto.InternalMessageInfo

func (m *WorkOrder) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *WorkOrder) GetTranscoderId() string {
	if m != nil {
		return m.TranscoderId
	}
	return ""
}

func (m *WorkOrder) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *WorkOrder) GetWalletAddress() string {
	if m != nil {
		return m.WalletAddress
	}
	return ""
}

func (m *WorkOrder) GetStreamId() int64 {
	if m != nil {
		return m.StreamId
	}
	return 0
}

func (m *WorkOrder) GetInputUrl() string {
	if m != nil {
		return m.InputUrl
	}
	return ""
}

func (m *WorkOrder) GetOutputUrl() string {
	if m != nil {
		return m.OutputUrl
	}
	return ""
}

func (m *WorkOrder) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *WorkOrder) GetChunks() []byte {
	if m != nil {
		return m.Chunks
	}
	return nil
}

func (m *WorkOrder) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *WorkOrder) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *WorkOrder) GetWorker() []byte {
	if m != nil {
		return m.Worker
	}
	return nil
}

func (m *WorkOrder) GetMaxWork() float32 {
	if m != nil {
		return m.MaxWork
	}
	return 0
}

func (m *WorkOrder) GetMinWork() float32 {
	if m != nil {
		return m.MinWork
	}
	return 0
}

func (m *WorkOrder) GetActualWork() float32 {
	if m != nil {
		return m.ActualWork
	}
	return 0
}

func (m *WorkOrder) GetProfileId() v1.ProfileId {
	if m != nil {
		return m.ProfileId
	}
	return v1.ProfileIdNone
}

func (m *WorkOrder) GetRefunded() bool {
	if m != nil {
		return m.Refunded
	}
	return false
}

func (m *WorkOrder) GetIngestStatus() IngestStatus {
	if m != nil {
		return m.IngestStatus
	}
	return IngestStatusNone
}

func init() {
	proto.RegisterEnum("cloud.api.work_order.v1.WorkOrderStatus", WorkOrderStatus_name, WorkOrderStatus_value)
	proto.RegisterEnum("cloud.api.work_order.v1.IngestStatus", IngestStatus_name, IngestStatus_value)
	proto.RegisterType((*WorkOrder)(nil), "cloud.api.work_order.v1.WorkOrder")
}

func init() { proto.RegisterFile("work_order/v1/work_order.proto", fileDescriptor_7c88e223a03237b4) }

var fileDescriptor_7c88e223a03237b4 = []byte{
	// 884 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x94, 0x4f, 0x6f, 0x1b, 0x45,
	0x18, 0xc6, 0xbd, 0x76, 0xe2, 0xd8, 0x13, 0x3b, 0xd9, 0x4e, 0x9c, 0x64, 0xbb, 0x05, 0x67, 0x70,
	0x15, 0xe4, 0x04, 0x6a, 0x37, 0x2d, 0x07, 0x48, 0x0f, 0xc8, 0x29, 0xad, 0x64, 0x14, 0x95, 0x68,
	0xdb, 0x80, 0xc4, 0xc5, 0x9a, 0xec, 0x4c, 0x9c, 0x21, 0xeb, 0x99, 0x65, 0x76, 0xd6, 0x69, 0xbe,
	0x01, 0xda, 0x4f, 0xc0, 0x65, 0x4f, 0xf0, 0x29, 0xf8, 0x04, 0x1c, 0xb9, 0x72, 0xa9, 0x50, 0xb8,
	0x71, 0x41, 0xea, 0x27, 0x40, 0x3b, 0xb3, 0x8e, 0xff, 0x28, 0xdc, 0xe6, 0x7d, 0x7e, 0xcf, 0x33,
	0xfb, 0x8e, 0xde, 0xd7, 0x06, 0xcd, 0x2b, 0x21, 0x2f, 0x07, 0x42, 0x12, 0x2a, 0xbb, 0xe3, 0x83,
	0xee, 0xb4, 0xea, 0x84, 0x52, 0x28, 0x01, 0xb7, 0xfd, 0x40, 0xc4, 0xa4, 0x83, 0x43, 0xd6, 0x99,
	0x61, 0xe3, 0x03, 0xf7, 0xd1, 0x90, 0xa9, 0x8b, 0xf8, 0xac, 0xe3, 0x8b, 0x51, 0x77, 0x28, 0x86,
	0xa2, 0xab, 0xfd, 0x67, 0xf1, 0xb9, 0xae, 0x74, 0xa1, 0x4f, 0xe6, 0x1e, 0xf7, 0x8b, 0x19, 0xfb,
	0xb7, 0x8c, 0x50, 0xf1, 0x5c, 0x30, 0xde, 0xd5, 0x97, 0x3f, 0xc2, 0x21, 0xcb, 0xd2, 0xe7, 0x2c,
	0xa0, 0x51, 0xd6, 0xc4, 0xe4, 0x6c, 0xa2, 0xad, 0x7f, 0x97, 0x41, 0xf5, 0x3b, 0x21, 0x2f, 0xbf,
	0xc9, 0x3e, 0x0d, 0xd7, 0x40, 0x91, 0x11, 0xc7, 0x42, 0x56, 0xbb, 0xee, 0x15, 0x19, 0x81, 0x0f,
	0x41, 0x5d, 0x49, 0xcc, 0x23, 0x5f, 0x10, 0x2a, 0x07, 0x8c, 0x38, 0x45, 0x64, 0xb5, 0xab, 0x5e,
	0x6d, 0x2a, 0xf6, 0x09, 0xdc, 0x03, 0xb6, 0x2f, 0xb8, 0x92, 0xd8, 0x57, 0x03, 0x4c, 0x88, 0xa4,
	0x51, 0xe4, 0x94, 0xb4, 0x6f, 0x7d, 0xa2, 0xf7, 0x8c, 0x0c, 0x77, 0xc1, 0xda, 0x15, 0x0e, 0x02,
	0x3a, 0x35, 0x2e, 0x69, 0x63, 0xdd, 0xa8, 0x13, 0xdb, 0x03, 0x50, 0x8d, 0x94, 0xa4, 0x78, 0x94,
	0x7d, 0x72, 0x05, 0x59, 0xed, 0x92, 0x57, 0x31, 0x42, 0x9f, 0x64, 0x90, 0xf1, 0x30, 0x56, 0x83,
	0x58, 0x06, 0x4e, 0x55, 0xc7, 0x2b, 0x5a, 0x38, 0x95, 0x01, 0xfc, 0x10, 0x00, 0x11, 0xab, 0x09,
	0x05, 0x9a, 0x56, 0x8d, 0x92, 0xe1, 0x2d, 0x50, 0x8e, 0x14, 0x56, 0x71, 0xe4, 0xac, 0x6a, 0x94,
	0x57, 0xf0, 0x08, 0x94, 0xfd, 0x8b, 0x98, 0x5f, 0x46, 0x4e, 0x0d, 0x59, 0xed, 0xda, 0xd1, 0xfe,
	0xfb, 0x77, 0x3b, 0x1f, 0x0f, 0x85, 0x1c, 0x1d, 0xb6, 0x8c, 0xfe, 0x4c, 0x5d, 0x87, 0xf4, 0xf0,
	0x87, 0x48, 0xf0, 0x56, 0xf4, 0x63, 0x70, 0xd8, 0x9a, 0x96, 0x5e, 0x9e, 0xcc, 0x3e, 0xed, 0x4b,
	0x8a, 0x15, 0x25, 0x03, 0xac, 0x9c, 0xba, 0xee, 0xba, 0x9a, 0x2b, 0x3d, 0x95, 0xe1, 0x38, 0x24,
	0x13, 0xbc, 0x66, 0x70, 0xae, 0xf4, 0x14, 0xbc, 0x00, 0xe5, 0x6c, 0x05, 0xa8, 0x74, 0xd6, 0x75,
	0x07, 0x27, 0xef, 0xdf, 0xed, 0x1c, 0x9b, 0x0e, 0x8c, 0x6e, 0x3a, 0x38, 0x63, 0x1c, 0xcb, 0xeb,
	0xf6, 0xd3, 0x27, 0x7b, 0xcf, 0xbe, 0x7a, 0xf1, 0xb2, 0x77, 0x7a, 0xfc, 0xe6, 0xf0, 0xd5, 0xe9,
	0xf1, 0xf1, 0x4c, 0x53, 0x77, 0x38, 0x78, 0x1c, 0x04, 0x2d, 0x2f, 0xbf, 0x1f, 0xde, 0x07, 0x95,
	0x11, 0x7e, 0x3b, 0xc8, 0x2a, 0xc7, 0x46, 0x56, 0xbb, 0xe8, 0xad, 0x8c, 0xf0, 0xdb, 0x6c, 0x07,
	0x34, 0x62, 0xdc, 0xa0, 0x7b, 0x39, 0x62, 0x5c, 0xa3, 0x1d, 0xb0, 0x8a, 0x7d, 0x15, 0xe3, 0xc0,
	0x50, 0xa8, 0x29, 0x30, 0x92, 0x36, 0x7c, 0x09, 0x40, 0xbe, 0x5a, 0xd9, 0xd0, 0x36, 0x90, 0xd5,
	0x5e, 0x7b, 0x82, 0x3a, 0xd3, 0x05, 0xbf, 0xdd, 0xbb, 0xf1, 0x41, 0xe7, 0xc4, 0x9c, 0xfb, 0xc4,
	0xab, 0x86, 0x93, 0x23, 0x74, 0x41, 0x45, 0xd2, 0xf3, 0x98, 0x13, 0x4a, 0x9c, 0x06, 0xb2, 0xda,
	0x15, 0xef, 0xb6, 0x86, 0x5f, 0x83, 0x3a, 0xe3, 0x43, 0x1a, 0xa9, 0x41, 0x3e, 0xbe, 0x4d, 0x7d,
	0xff, 0x6e, 0xe7, 0x7f, 0x7e, 0x40, 0x9d, 0xbe, 0x76, 0xbf, 0xd6, 0x66, 0xaf, 0xc6, 0x66, 0xaa,
	0xfd, 0x3f, 0x4b, 0x60, 0xfd, 0x76, 0xe3, 0x8d, 0x06, 0x3f, 0x02, 0x4b, 0x5c, 0x70, 0x6a, 0x17,
	0xdc, 0xed, 0x24, 0x45, 0x1b, 0x0b, 0xf8, 0x95, 0xe0, 0x14, 0xee, 0x80, 0x12, 0xa7, 0x57, 0xb6,
	0xe5, 0x6e, 0x25, 0x29, 0x82, 0x8b, 0x0e, 0x7a, 0x05, 0x3f, 0x07, 0x76, 0x48, 0x39, 0x61, 0x7c,
	0x38, 0xc0, 0x61, 0x28, 0xc5, 0x18, 0x07, 0x76, 0xd1, 0x6d, 0x25, 0x29, 0x6a, 0x2e, 0xb8, 0x4f,
	0x8c, 0xad, 0x97, 0xbb, 0xe0, 0x1e, 0xa8, 0x98, 0x04, 0x25, 0x76, 0xc9, 0x7d, 0x90, 0xa4, 0x68,
	0x7b, 0x21, 0xd1, 0xcb, 0x31, 0x7c, 0x0c, 0x6a, 0xfa, 0xa1, 0x91, 0xc2, 0x52, 0x51, 0x62, 0x2f,
	0xb9, 0xcd, 0x24, 0x45, 0xee, 0x82, 0x3d, 0x2b, 0x5f, 0x1b, 0x07, 0xec, 0x82, 0xd5, 0xc9, 0xaf,
	0x95, 0xf1, 0xa1, 0xbd, 0x7c, 0x67, 0xe0, 0xcd, 0xd4, 0x01, 0xdb, 0x60, 0xc5, 0xc7, 0xdc, 0xa7,
	0x01, 0xb1, 0xcb, 0x77, 0x36, 0xf3, 0x5c, 0x53, 0x4a, 0xe0, 0x2e, 0x28, 0x9f, 0x63, 0x16, 0x50,
	0x62, 0xaf, 0xb8, 0xf7, 0x93, 0x14, 0x6d, 0x2e, 0x18, 0x5f, 0x6a, 0x08, 0x3f, 0x01, 0x55, 0x5f,
	0x8c, 0xc2, 0x80, 0x66, 0x0d, 0x57, 0xdc, 0x0f, 0x92, 0x14, 0x39, 0x8b, 0x57, 0x4e, 0x38, 0x7c,
	0x08, 0x96, 0x25, 0xc5, 0xe4, 0xda, 0xae, 0xba, 0x4e, 0x92, 0xa2, 0xc6, 0x82, 0xd1, 0xcb, 0x98,
	0xbb, 0xfd, 0xd3, 0x2f, 0xcd, 0xc2, 0x6f, 0xbf, 0x36, 0x17, 0xe7, 0xb8, 0xff, 0x8f, 0x05, 0x6a,
	0xb3, 0xa3, 0x87, 0x9f, 0x02, 0x38, 0xb7, 0x38, 0x83, 0x7c, 0xcc, 0x8d, 0x24, 0x45, 0xf6, 0xac,
	0x53, 0xcf, 0xf8, 0x31, 0x68, 0xcc, 0xbb, 0xb1, 0xaf, 0xd8, 0x98, 0x4e, 0x86, 0x3e, 0xeb, 0xef,
	0x69, 0x02, 0x3f, 0x03, 0x5b, 0xf3, 0x09, 0xc6, 0xf3, 0x4c, 0xd1, 0xf4, 0x3f, 0x9b, 0xe9, 0xe7,
	0x0c, 0x76, 0xc0, 0xc6, 0x7c, 0x8a, 0x4a, 0x29, 0xa4, 0x5d, 0x72, 0x37, 0x93, 0x14, 0xdd, 0x9b,
	0x8d, 0xbc, 0xc8, 0x80, 0xdb, 0xc8, 0xdf, 0x3b, 0xf7, 0xb6, 0xa3, 0xc6, 0xef, 0x37, 0xcd, 0xc2,
	0x1f, 0x37, 0xcd, 0xc2, 0x5f, 0x37, 0xcd, 0xc2, 0xcf, 0x7f, 0x37, 0x0b, 0xdf, 0x17, 0xc7, 0x07,
	0x67, 0x65, 0xfd, 0xbf, 0xfe, 0xf4, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf6, 0x27, 0xcc, 0xce,
	0x7c, 0x06, 0x00, 0x00,
}
