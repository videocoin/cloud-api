syntax = "proto3";

package cloud.api.account.v1;

import "accounts/v1/account.proto";

import "github.com/VideoCoin/cloud-api/rpc/health.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

option go_package = "v1";
option (gogoproto.unmarshaler_all) = false;
option (gogoproto.marshaler_all) = false;
option (gogoproto.sizer_all) = false;

service AccountService {
    rpc Health(google.protobuf.Empty) returns (cloud.api.rpc.HealthStatus) {
        option (google.api.http) = {
            get: "/healthz"
        };
    }

    rpc Create(AccountRequest) returns (AccountProfile) {}
    rpc Get(AccountRequest) returns (AccountProfile) {}

    rpc GetByAddress(Address) returns (AccountProfile) {}
    rpc List(google.protobuf.Empty) returns (ListResponse) {}

    rpc Refresh(AccountRequest) returns (AccountProfile) {}

    rpc Key(AccountRequest) returns (AccountKey) {}
}

message AccountRequest {
    string owner_id = 1 [(gogoproto.customname) = "OwnerID"];
}

message Address {
    string address = 1 [(validate.rules).string = {min_len: 40, max_len: 42}];
}

message ListResponse {
    repeated AccountProfile account = 1;
}


