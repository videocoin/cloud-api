syntax = "proto3";

package cloud.api.account.v1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "github.com/VideoCoin/cloud-api/rpc/health.proto";
import "accounts/v1/account.proto";

option go_package = "v1";
option (gogoproto.unmarshaler_all) = false;
option (gogoproto.marshaler_all) = false;
option (gogoproto.sizer_all) = false;

service AccountService {
    rpc Health(google.protobuf.Empty) returns (cloud.api.rpc.HealthStatus) {
        option (google.api.http) = {
            get: "/healthz"
        };
    }

    rpc CreateAccount(CreateAccountRequest) returns (AccountProfile) {}

    rpc GetAccount(AccountRequest) returns (AccountProfile) {}

    rpc UpdateBalance(UpdateBalanceRequest) returns (AccountProfile) {
        option (google.api.http) = {
            put: "/api/v1/account/balance"
            body: "*"
        };
    }

    rpc GetTxList(TxListRequest) returns (TxListResponse) {
        option (google.api.http) = {
            get: "/api/v1/account/txs"
        };
    }
}

message CreateAccountRequest {
    string owner_id = 1 [(gogoproto.customname) = "OwnerID"];
}

message AccountRequest {
    string owner_id = 1 [(gogoproto.customname) = "OwnerID"];
}

message UpdateBalanceRequest {
    string transaction_hash = 1;
}

message TxListRequest {}

message TxListResponse {
    repeated TxResponse items = 1;
}

message TxResponse {
    string type = 1;
    google.protobuf.Timestamp created_at = 2;
    string eth_tx_hash = 3;
    double amount_eth = 4;
}
