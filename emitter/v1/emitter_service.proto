syntax = "proto3";

package cloud.api.streams.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/VideoCoin/cloud-api/rpc/health.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

option go_package = "v1";
option (gogoproto.unmarshaler_all) = false;
option (gogoproto.marshaler_all) = false;
option (gogoproto.sizer_all) = false;

service EmitterService {
    rpc Health(google.protobuf.Empty) returns (cloud.api.rpc.HealthStatus) {
        option (google.api.http) = {
            get: "/healthz"
        };
    }

    rpc RequestStreamId(google.protobuf.Empty) returns (RequestStreamIdResponse) {}

    rpc CreateStreamAddress(CreateStreamAddressRequest) returns (google.protobuf.Empty) {}

    // rpc ApproveStream(ApproveStreamRequest) returns (google.protobuf.Empty) {}
    // rpc AddInputChunk(AddInputChunkRequest) returns (google.protobuf.Empty) {}
}

message RequestStreamIdResponse {
    uint64 stream_id = 1;
    string address = 2;
}

message CreateStreamAddressRequest {
    uint64 stream_id = 1;
}

message StreamAddress {
    string stream_address = 1;
}