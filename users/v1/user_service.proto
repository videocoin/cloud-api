syntax = "proto3";

package cloud.api.users.v1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";
import "github.com/VideoCoin/cloud-api/rpc/health.proto";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

import "users/v1/user.proto";


option go_package = "v1";
option (gogoproto.unmarshaler_all) = false;
option (gogoproto.marshaler_all) = false;
option (gogoproto.sizer_all) = false;

service UserService {
    rpc Health(google.protobuf.Empty) returns (cloud.api.rpc.HealthStatus) {
        option (google.api.http) = {
            get: "/healthz"
        };
    }

    rpc Create(CreateUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
            post: "/api/v1/users",
            body: "*"
        };
    }

    rpc Login(LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
            post: "/api/v1/auth",
            body: "*"
        };
    }

    rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/v1/auth"
        };
    }

    rpc ResetPassword(ResetPasswordUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/v1/auth/reset"
        };
    }

    rpc Get(google.protobuf.Empty) returns (UserProfile) {
        option (google.api.http) = {
            get: "/api/v1/user"
        };
    }

    rpc StartRecovery(StartRecoveryUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/v1/recovery/start"
        };
    }

    rpc Recover(RecoverUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/v1/recover"
        };
    }

    rpc Whitelist(google.protobuf.Empty) returns (WhitelistResponse) {
        option (google.api.http) = {
            post: "/api/v1/whitelist"
        };
    }

    rpc LookupByAddress(LookupByAddressRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/v1/address/{address}"
        };
    }
}

message CreateUserRequest {
    string email = 1 [(validate.rules).string.email = true];
    string password = 2 [(validate.rules).string.min_len = 5];
    string name = 3 [(validate.rules).string.min_len = 3];
    string confirm_password = 4 [(validate.rules).string.min_len = 5];
}

message LoginUserRequest {
    string email = 1 [(validate.rules).string.email = true];
    string password = 2 [(validate.rules).string.min_len = 5];
}

message LoginUserResponse {
    string token = 1;
}

message UserRequest {
    string id = 1;
}

message ResetPasswordUserRequest {
    string password = 1 [(validate.rules).string.min_len = 5];
    string confirm_password = 2 [(validate.rules).string.min_len = 5];
}

message StartRecoveryUserRequest {
    string email = 1 [(validate.rules).string.email = true];
}

message RecoverUserRequest {
    string token = 1;
    string password = 2 [(validate.rules).string.min_len = 3];
    string confirm_password = 3 [(validate.rules).string.min_len = 5];
}

message WhitelistResponse {
    repeated string items = 1;
}

message LookupByAddressRequest {
    string address = 1 [(validate.rules).string = {min_len: 40, max_len: 42}];
}