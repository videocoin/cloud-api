// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: users/v1/user.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import v1 "github.com/VideoCoin/cloud-api/accounts/v1"
import _ "github.com/gogo/protobuf/gogoproto"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserRole int32

const (
	UserRoleRegular UserRole = 0
	UserRoleManager UserRole = 1
	UserRoleQa      UserRole = 2
	UserRoleSuper   UserRole = 3
)

var UserRole_name = map[int32]string{
	0: "REGULAR",
	1: "MANAGER",
	2: "QA",
	3: "SUPER",
}
var UserRole_value = map[string]int32{
	"REGULAR": 0,
	"MANAGER": 1,
	"QA":      2,
	"SUPER":   3,
}

func (x UserRole) String() string {
	return proto.EnumName(UserRole_name, int32(x))
}
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_user_cfc0c41371726974, []int{0}
}

type User struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" gorm:"type:varchar(36);primary_key"`
	Email                string               `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty" gorm:"unique_index"`
	Password             string               `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty" gorm:"type:varchar(100)"`
	Name                 string               `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" gorm:"type:varchar(100)"`
	Role                 UserRole             `protobuf:"varint,5,opt,name=role,proto3,enum=cloud.api.users.v1.UserRole" json:"role,omitempty"`
	Activated            bool                 `protobuf:"varint,6,opt,name=activated,proto3" json:"activated,omitempty"`
	ActivatedAt          *timestamp.Timestamp `protobuf:"bytes,7,opt,name=activated_at,json=activatedAt,proto3" json:"activated_at,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Token                string               `protobuf:"bytes,9,opt,name=token,proto3" json:"token,omitempty" gorm:"type:varchar(255);index"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_cfc0c41371726974, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetRole() UserRole {
	if m != nil {
		return m.Role
	}
	return UserRoleRegular
}

func (m *User) GetActivated() bool {
	if m != nil {
		return m.Activated
	}
	return false
}

func (m *User) GetActivatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ActivatedAt
	}
	return nil
}

func (m *User) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UserProfile struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string             `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name                 string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Activated            bool               `protobuf:"varint,4,opt,name=activated,proto3" json:"activated,omitempty"`
	Account              *v1.AccountProfile `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UserProfile) Reset()         { *m = UserProfile{} }
func (m *UserProfile) String() string { return proto.CompactTextString(m) }
func (*UserProfile) ProtoMessage()    {}
func (*UserProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_cfc0c41371726974, []int{1}
}
func (m *UserProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserProfile.Unmarshal(m, b)
}
func (m *UserProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserProfile.Marshal(b, m, deterministic)
}
func (dst *UserProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserProfile.Merge(dst, src)
}
func (m *UserProfile) XXX_Size() int {
	return xxx_messageInfo_UserProfile.Size(m)
}
func (m *UserProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_UserProfile.DiscardUnknown(m)
}

var xxx_messageInfo_UserProfile proto.InternalMessageInfo

func (m *UserProfile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserProfile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserProfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserProfile) GetActivated() bool {
	if m != nil {
		return m.Activated
	}
	return false
}

func (m *UserProfile) GetAccount() *v1.AccountProfile {
	if m != nil {
		return m.Account
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "cloud.api.users.v1.User")
	proto.RegisterType((*UserProfile)(nil), "cloud.api.users.v1.UserProfile")
	proto.RegisterEnum("cloud.api.users.v1.UserRole", UserRole_name, UserRole_value)
}

func init() { proto.RegisterFile("users/v1/user.proto", fileDescriptor_user_cfc0c41371726974) }

var fileDescriptor_user_cfc0c41371726974 = []byte{
	// 600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xd1, 0x4e, 0xd4, 0x40,
	0x14, 0x86, 0xb7, 0xcb, 0x2e, 0xec, 0xce, 0x2a, 0xae, 0x03, 0xd1, 0xa6, 0xd9, 0x74, 0x9b, 0x6a,
	0xe2, 0x62, 0x42, 0x97, 0x5d, 0x82, 0x22, 0x44, 0x93, 0x62, 0x08, 0x37, 0x62, 0x60, 0x10, 0x2f,
	0xbc, 0x21, 0x43, 0x3b, 0x94, 0x09, 0x6d, 0xa7, 0x4e, 0xa7, 0x55, 0xde, 0xc0, 0xf0, 0x00, 0xc6,
	0x1b, 0xae, 0xd4, 0x97, 0xf0, 0x09, 0xbc, 0xf4, 0x09, 0x36, 0x06, 0xdf, 0x60, 0x9f, 0xc0, 0xec,
	0xb4, 0x5d, 0x58, 0x25, 0xd1, 0xbb, 0x33, 0x3d, 0xdf, 0x7f, 0x3a, 0xe7, 0xff, 0x07, 0xcc, 0x25,
	0x31, 0xe1, 0x71, 0x37, 0xed, 0x75, 0x47, 0x85, 0x15, 0x71, 0x26, 0x18, 0x84, 0x8e, 0xcf, 0x12,
	0xd7, 0xc2, 0x11, 0xb5, 0x64, 0xdb, 0x4a, 0x7b, 0xda, 0xa2, 0x47, 0xc5, 0x71, 0x72, 0x68, 0x39,
	0x2c, 0xe8, 0x7a, 0xcc, 0x63, 0x5d, 0x89, 0x1e, 0x26, 0x47, 0xf2, 0x24, 0x0f, 0xb2, 0xca, 0x46,
	0x68, 0xab, 0x57, 0xf0, 0xd7, 0xd4, 0x25, 0xec, 0x39, 0xa3, 0x61, 0x57, 0xce, 0x5d, 0xc4, 0x11,
	0xed, 0x62, 0xc7, 0x61, 0x49, 0x28, 0xe4, 0x9f, 0xf3, 0x3a, 0x57, 0xb6, 0x3d, 0xc6, 0x3c, 0x9f,
	0x5c, 0xce, 0x17, 0x34, 0x20, 0xb1, 0xc0, 0x41, 0x94, 0x01, 0xe6, 0x60, 0x0a, 0x54, 0xf6, 0x63,
	0xc2, 0xe1, 0x63, 0x50, 0xa6, 0xae, 0xaa, 0x18, 0x4a, 0xa7, 0xbe, 0xf1, 0x60, 0x38, 0x68, 0xdf,
	0xf3, 0x18, 0x0f, 0xd6, 0x4c, 0x71, 0x1a, 0x91, 0xb5, 0x14, 0x73, 0xe7, 0x18, 0xf3, 0xce, 0xf2,
	0xa3, 0x85, 0xf5, 0x88, 0xd3, 0x00, 0xf3, 0xd3, 0x83, 0x13, 0x72, 0x6a, 0xa2, 0x32, 0x75, 0xe1,
	0x22, 0xa8, 0x92, 0x00, 0x53, 0x5f, 0x2d, 0x4b, 0xed, 0xdd, 0xe1, 0xa0, 0x3d, 0x97, 0x69, 0x93,
	0x90, 0xbe, 0x4d, 0xc8, 0x01, 0x0d, 0x5d, 0xf2, 0xde, 0x44, 0x19, 0x05, 0x57, 0x41, 0x2d, 0xc2,
	0x71, 0xfc, 0x8e, 0x71, 0x57, 0x9d, 0x92, 0x8a, 0xd6, 0x70, 0xd0, 0x56, 0xaf, 0xf9, 0x5b, 0x6f,
	0x69, 0x69, 0xc1, 0x44, 0x63, 0x1a, 0x2e, 0x81, 0x4a, 0x88, 0x03, 0xa2, 0x56, 0xfe, 0x43, 0x25,
	0xc9, 0x91, 0x82, 0x33, 0x9f, 0xa8, 0x55, 0x43, 0xe9, 0xcc, 0xf6, 0x5b, 0xd6, 0xdf, 0x49, 0x58,
	0xa3, 0xdd, 0x11, 0xf3, 0x09, 0x92, 0x24, 0x6c, 0x81, 0x3a, 0x76, 0x04, 0x4d, 0xb1, 0x20, 0xae,
	0x3a, 0x6d, 0x28, 0x9d, 0x1a, 0xba, 0xfc, 0x00, 0x9f, 0x82, 0x1b, 0xe3, 0xc3, 0x01, 0x16, 0xea,
	0x8c, 0xa1, 0x74, 0x1a, 0x7d, 0xcd, 0xca, 0x4c, 0xb6, 0x0a, 0x93, 0xad, 0x57, 0x85, 0xc9, 0xa8,
	0x31, 0xe6, 0x6d, 0x01, 0x9f, 0x00, 0xe0, 0x70, 0x52, 0x88, 0x6b, 0xff, 0x14, 0xd7, 0x73, 0xda,
	0x16, 0x70, 0x15, 0x54, 0x05, 0x3b, 0x21, 0xa1, 0x5a, 0x97, 0xcb, 0x9b, 0xc3, 0x41, 0x5b, 0xbf,
	0x66, 0xf9, 0xfe, 0xca, 0xca, 0xc2, 0x7a, 0xe1, 0xb7, 0x14, 0x98, 0x5f, 0x15, 0xd0, 0x18, 0x2d,
	0xb9, 0xc3, 0xd9, 0x11, 0xf5, 0x09, 0x9c, 0xbd, 0xcc, 0x59, 0xc6, 0x37, 0x3f, 0x11, 0x5f, 0x91,
	0x12, 0xcc, 0xbd, 0x96, 0x09, 0xe5, 0x6e, 0x4e, 0x78, 0x53, 0xf9, 0xd3, 0x9b, 0x67, 0x60, 0x26,
	0x7f, 0x7a, 0xd2, 0xee, 0x46, 0xff, 0xfe, 0x15, 0xbb, 0x8b, 0x47, 0x99, 0xf6, 0x2c, 0x3b, 0x2b,
	0xf3, 0xeb, 0xa0, 0x42, 0xf4, 0xf0, 0xa3, 0x02, 0x6a, 0x45, 0x18, 0xd0, 0x00, 0x33, 0x68, 0x73,
	0x6b, 0xff, 0x85, 0x8d, 0x9a, 0x25, 0x6d, 0xee, 0xec, 0xdc, 0xb8, 0x35, 0xce, 0x89, 0x78, 0x89,
	0x8f, 0xf9, 0x88, 0xd8, 0xb6, 0x5f, 0xda, 0x5b, 0x9b, 0xa8, 0xa9, 0x4c, 0x12, 0xdb, 0x38, 0xc4,
	0x1e, 0xe1, 0xf0, 0x0e, 0x28, 0xef, 0xda, 0xcd, 0xb2, 0x36, 0x7b, 0x76, 0x6e, 0x80, 0xa2, 0xb9,
	0x8b, 0x61, 0x0b, 0x54, 0xf7, 0xf6, 0x77, 0x36, 0x51, 0x73, 0x4a, 0xbb, 0x7d, 0x76, 0x6e, 0xdc,
	0x2c, 0x5a, 0x7b, 0x49, 0x44, 0xb8, 0xd6, 0xfc, 0xf0, 0x59, 0x2f, 0x7d, 0xfb, 0xa2, 0x8f, 0xef,
	0xb2, 0x31, 0xff, 0xfd, 0x42, 0x2f, 0xfd, 0xb8, 0xd0, 0x4b, 0x3f, 0x2f, 0xf4, 0xd2, 0xa7, 0x5f,
	0x7a, 0xe9, 0x4d, 0x39, 0xed, 0x1d, 0x4e, 0xcb, 0xbc, 0x96, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff,
	0x86, 0x88, 0xa1, 0xda, 0xf3, 0x03, 0x00, 0x00,
}
