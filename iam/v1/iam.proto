syntax = "proto3";

package cloud.api.iam.v1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "iam/v1/policy.proto";

option go_package = "v1";
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.messagename_all) = true;

service IAM {
  option (google.api.default_host) = "iam.videocoin.network";
  option (google.api.oauth_scopes) =
      "https://www.videocoin.network/auth/cloud-platform";

  // Lists [ServiceAccounts][cloud.api.iam.v1.ServiceAccount] for a
  // project.
  rpc ListServiceAccounts(ListServiceAccountsRequest)
      returns (ListServiceAccountsResponse) {
    option (google.api.http) = {
      get : "/v1/{name=projects/*}/serviceAccounts"
    };
    option (google.api.method_signature) = "name";
  }

  // Gets a [ServiceAccount][cloud.api.iam.v1.ServiceAccount].
  rpc GetServiceAccount(GetServiceAccountRequest) returns (ServiceAccount) {
    option (google.api.http) = {
      get : "/v1/{name=projects/*/serviceAccounts/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Creates a [ServiceAccount][cloud.api.iam.v1.ServiceAccount]
  rpc CreateServiceAccount(CreateServiceAccountRequest)
      returns (ServiceAccount) {
    option (google.api.http) = {
      post : "/v1/{name=projects/*}/serviceAccounts"
      body : "*"
    };
    option (google.api.method_signature) = "name,account_id,service_account";
  }

  // Deletes a [ServiceAccount][cloud.api.iam.v1.ServiceAccount].
  rpc DeleteServiceAccount(DeleteServiceAccountRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/{name=projects/*/serviceAccounts/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Lists [ServiceAccountKeys][cloud.api.iam.v1.ServiceAccountKey].
  rpc ListServiceAccountKeys(ListServiceAccountKeysRequest)
      returns (ListServiceAccountKeysResponse) {
    option (google.api.http) = {
      get : "/v1/{name=projects/*/serviceAccounts/*}/keys"
    };
    option (google.api.method_signature) = "name";
  }

  // Gets the [ServiceAccountKey][cloud.api.iam.v1.ServiceAccountKey]
  // by key id.
  rpc GetServiceAccountKey(GetServiceAccountKeyRequest)
      returns (ServiceAccountKey) {
    option (google.api.http) = {
      get : "/v1/{name=projects/*/serviceAccounts/*/keys/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Creates a [ServiceAccountKey][cloud.api.iam.v1.ServiceAccountKey]
  // and returns it.
  rpc CreateServiceAccountKey(CreateServiceAccountKeyRequest)
      returns (ServiceAccountKey) {
    option (google.api.http) = {
      post : "/v1/{name=projects/*/serviceAccounts/*}/keys"
      body : "*"
    };
    option (google.api.method_signature) = "name";
  }

  // Deletes a [ServiceAccountKey][cloud.api.iam.v1.ServiceAccountKey].
  rpc DeleteServiceAccountKey(DeleteServiceAccountKeyRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete : "/v1/{name=projects/*/serviceAccounts/*/keys/*}"
    };
    option (google.api.method_signature) = "name";
  }

  // Returns the Cloud IAM access control policy for a
  // [ServiceAccount][cloud.api.iam.v1.ServiceAccount].
  rpc GetIamPolicy(GetIamPolicyRequest) returns (Policy) {
    option (google.api.http) = {
      post : "/v1/{resource=projects/*/serviceAccounts/*}:getIamPolicy"
    };
    option (google.api.method_signature) = "resource";
  }

  // Sets the Cloud IAM access control policy for a
  // [ServiceAccount][cloud.api.iam.v1.ServiceAccount].
  rpc SetIamPolicy(SetIamPolicyRequest) returns (Policy) {
    option (google.api.http) = {
      post : "/v1/{resource=projects/*/serviceAccounts/*}:setIamPolicy"
      body : "*"
    };
    option (google.api.method_signature) = "resource,policy";
  }

  // Lists the Roles defined on a resource.
  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse) {
    option (google.api.http) = {
      get : "/v1/roles"
    };
  }

  // Gets a Role definition.
  rpc GetRole(GetRoleRequest) returns (Role) {
    option (google.api.http) = {
      get : "/v1/{name=roles/*}"
    };
  }
}

// A service account in the Identity and Access Management API.
message ServiceAccount {
  option (google.api.resource) = {
    type : "iam.videocoin.network/ServiceAccount"
    pattern : "projects/{project}/serviceAccounts/{service_account}"
  };

  // The resource name of the service account in the following format:
  // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_EMAIL}`.
  //
  // Requests using `-` as a wildcard for the `PROJECT_ID` will infer the
  // project from the `ACCOUNT_EMAIL`.
  string name = 1;

  // @OutputOnly The id of the project that owns the service account.
  string project_id = 2;

  // @OutputOnly The unique and stable id of the service account.
  string unique_id = 3;

  // @OutputOnly The email address of the service account.
  string email = 4;

  // Optional. A user-specified name for the service account.
  // Must be less than or equal to 100 UTF-8 bytes.
  string display_name = 5;
}

// The service account list request.
message ListServiceAccountsRequest {
  // Required. The resource name of the user associated with the service
  // accounts, such as `projects/my-project-123`.
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];

  // Optional limit on the number of service accounts to include in the
  // response. Further accounts can subsequently be obtained by including the
  // [ListServiceAccountsResponse.next_page_token][cloud.api.iam.v1.ListServiceAccountsResponse.next_page_token]
  // in a subsequent request.
  int32 page_size = 2;

  // Optional pagination token returned in an earlier
  // [ListServiceAccountsResponse.next_page_token][cloud.api.iam.v1.ListServiceAccountsResponse.next_page_token].
  string page_token = 3;
}

// The service account list response.
message ListServiceAccountsResponse {
  // The list of matching service accounts.
  repeated ServiceAccount accounts = 1;

  // To retrieve the next page of results, set
  // [ListServiceAccountsRequest.page_token][cloud.api.iam.v1.ListServiceAccountsRequest.page_token]
  // to this value.
  string next_page_token = 2;
}

// The service account get request.
message GetServiceAccountRequest {
  // Required. The resource name of the service account in the following format:
  // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_EMAIL}`.
  // Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
  // the `ACCOUNT_EMAIL`.
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// The service account create request.
message CreateServiceAccountRequest {
  // Required. The resource name of the project associated with the service
  // accounts, such as `projects/my-project-123`.
  // TODO(rgeraldes): add projects reference
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];

  // Required. The account id that is used to generate the service account
  // email address and a stable unique id. It is unique within a project,
  // must be 6-30 characters long, and match the regular expression
  // `[a-z]([-a-z0-9]*[a-z0-9])` to comply with RFC1035.
  string account_id = 2 [ (google.api.field_behavior) = REQUIRED ];
}

// The service account delete request.
message DeleteServiceAccountRequest {
  // Required. The resource name of the service account in the following
  // format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_EMAIL}`. Using `-`
  // as a wildcard for the `PROJECT_ID` will infer the project from the
  // `ACCOUNT_EMAIL`.
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
}

message ServiceAccountKey {
  option (google.api.resource) = {
    type : "iam.videocoin.network/Key"
    pattern : "projects/{project}/serviceAccounts/{service_account}/keys/{key}"
  };

  // The resource name of the service account key in the following format
  // `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_EMAIL}/keys/{key}`.
  string name = 1;

  // The private key data. Only provided in `GetServiceAccountKey`
  // responses. Make sure to keep the private key data secure because it
  // allows for the assertion of the service account identity.
  bytes private_key_data = 2;

  // The public key data. Only provided in `GetServiceAccountKey` responses.
  bytes public_key_data = 3;

  // The key can be used after this timestamp.
  google.protobuf.Timestamp valid_after_time = 4;

  // The key can be used before this timestamp.
  // For system-managed key pairs, this timestamp is the end time for the
  // private key signing operation. The public key could still be used
  // for verification for a few hours after this time.
  google.protobuf.Timestamp valid_before_time = 5;
}

// The service account keys list request.
message ListServiceAccountKeysRequest {
  // Required. The resource name of the service account in the following
  // format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_EMAIL}`.
  //
  // Using `-` as a wildcard for the `PROJECT_ID`, will infer the project from
  // the `ACCOUNT_EMAIL`.
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// The service account keys list response.
message ListServiceAccountKeysResponse {
  // The public keys for the service account.
  repeated ServiceAccountKey keys = 1;
}

// Supported public key output formats.
enum ServiceAccountPublicKeyType {
  // Unspecified. Returns nothing here.
  TYPE_NONE = 0;

  // X509 PEM format.
  TYPE_X509_PEM_FILE = 1;

  // Raw public key.
  TYPE_RAW_PUBLIC_KEY = 2;
}

// The service account key get by id request.
message GetServiceAccountKeyRequest {
  // Required. The resource name of the service account key in the following
  // format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_EMAIL}/keys/{key}`.
  //
  // Using `-` as a wildcard for the `PROJECT_ID` will infer the project from
  // the `ACCOUNT_EMAIL`.
  string name = 1 [ (google.api.field_behavior) = REQUIRED ];
}

// The service account key create request.
message CreateServiceAccountKeyRequest {
  // Required. The resource name of the service account in the following
  // format: `project/{PROJECT_ID}/serviceAccounts/{ACCOUNT_EMAIL}`. Using `-`
  // as a wildcard for the `PROJECT_ID` will infer the project from the
  // `ACCOUNT_EMAIL`.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type : "iam.videocoin.network/ServiceAccount"
    }
  ];
}

// The service account key delete request.
message DeleteServiceAccountKeyRequest {
  // Required. The resource name of the service account key in the following
  // format: `projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT_EMAIL}/keys/{key}`.
  // Using
  // `-` as a wildcard for the `PROJECT_ID` will infer the project from the
  // `ACCOUNT_EMAIL`.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type : "iam.videocoin.network/Key"}
  ];
}

message SetIamPolicyRequest {
  // REQUIRED: The resource for which the policy is being specified.
  // See the operation documentation for the appropriate value for this field.
  string resource = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "*"
  ];

  // REQUIRED: The complete policy to be applied to the `resource`. The size of
  // the policy is limited to a few 10s of KB. An empty policy is a
  // valid policy but certain Cloud Platform services (such as Projects)
  // might reject them.
  Policy policy = 2 [ (google.api.field_behavior) = REQUIRED ];
}

// Request message for `GetIamPolicy` method.
message GetIamPolicyRequest {
  // REQUIRED: The resource for which the policy is being requested.
  // See the operation documentation for the appropriate value for this field.
  string resource = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).type = "*"
  ];
}

// A role in the Identity and Access Management API.
message Role {
  // A stage representing a role's lifecycle phase.
  enum RoleLaunchStage {
    // The user has indicated this role is currently in an Alpha phase. If this
    // launch stage is selected, the `stage` field will not be included when
    // requesting the definition for a given role.
    ALPHA = 0;

    // The user has indicated this role is currently in a Beta phase.
    BETA = 1;

    // The user has indicated this role is generally available.
    GA = 2;

    // The user has indicated this role is being deprecated.
    DEPRECATED = 4;

    // This role is disabled and will not contribute permissions to any members
    // it is granted to in policies.
    DISABLED = 5;

    // The user has indicated this role is currently in an EAP phase.
    EAP = 6;
  }

  // The name of the role.
  //
  // When Role is used in CreateRole, the role name must not be set.
  //
  // When Role is used in output and other input such as UpdateRole, the role
  // name is the complete path, e.g., logging.viewer for predefined roles.
  string name = 1;

  // Optional. A human-readable title for the role.  Typically this
  // is limited to 100 UTF-8 bytes.
  string title = 2;

  // Optional. A human-readable description for the role.
  string description = 3;

  // The names of the permissions this role grants when bound in an IAM policy.
  repeated string included_permissions = 4;

  // The current launch stage of the role. If the `ALPHA` launch stage has been
  // selected for a role, the `stage` field will not be included in the
  // returned definition for the role.
  RoleLaunchStage stage = 5;
}

// A view for Role objects.
enum RoleView {
  // Omits the `included_permissions` field.
  // This is the default value.
  BASIC = 0;

  // Returns all fields.
  FULL = 1;
}

// The request to get all roles defined under a resource.
message ListRolesRequest {
  // Optional limit on the number of roles to include in the response.
  int32 page_size = 1;

  // Optional pagination token returned in an earlier ListRolesResponse.
  string page_token = 2;

  // Optional view for the returned Role objects. When `FULL` is specified,
  // the `includedPermissions` field is returned, which includes a list of all
  // permissions in the role. The default value is `BASIC`, which does not
  // return the `includedPermissions` field.
  RoleView view = 3;

  // Include Roles that have been deleted.
  bool show_deleted = 4;
}

// The response containing the roles defined under a resource.
message ListRolesResponse {
  // The Roles defined on this resource.
  repeated Role roles = 1;

  // To retrieve the next page of results, set
  // `ListRolesRequest.page_token` to this value.
  string next_page_token = 2;
}

message GetRoleRequest {
  // The resource type's `name` value format is described below:
  //
  // * `roles.get()`: `{ROLE_NAME}`.
  //   This method returns results from all predefined roles.
  //   Example request URL:
  //   `https://iam.videocoin.network/v1/roles/{ROLE_NAME}`
  string name = 1 [ (google.api.resource_reference).type = "*" ];
}

// A permission which can be included by a role.
message Permission {
  // The name of this Permission.
  string name = 1;

  // The title of this Permission.
  string title = 2;

  // A brief description of what this Permission is used for.
  string description = 3;
}